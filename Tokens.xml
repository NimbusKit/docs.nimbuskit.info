<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>NimbusAttributedLabel</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusAttributedLabel.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusBadge</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusBadge.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusCollections</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusCollections.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionViewModels</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>CollectionViewModels.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionViewCellFactory</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>CollectionViewCellFactory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CollectionViewTools</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>CollectionViewTools.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Actions</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Abstract>For attaching actions to objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIActionBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gNIActionBlock</Anchor>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPushControllerAction</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gNIPushControllerAction</Anchor>
    <Abstract>Returns a block that pushes an instance of the controllerClass onto the navigation stack...</Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTarget:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>ginitWithTarget:</Anchor>
    <Abstract>Initializes a newly allocated table view actions object with the given target. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapBlock:</Anchor>
    <Abstract>Attaches a tap action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailBlock:</Anchor>
    <Abstract>Attaches a detail action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapBlock:</Anchor>
    <Abstract>Attaches a tap block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailBlock:</Anchor>
    <Abstract>Attaches a detail block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectActionable:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gisObjectActionable:</Anchor>
    <Abstract>Returns whether or not the object has any actions attached to it. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromKeyClass:map:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gobjectFromKeyClass:map:</Anchor>
    <Abstract>Returns a mapped object from the given key class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Button-Utilities</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Button-Utilities.html</Path>
    <Abstract>For manipulating UIButton objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIApplyImageSelectorToButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Button-Utilities.html</Path>
    <Anchor>gNIApplyImageSelectorToButton</Anchor>
    <Abstract>Sets the images for a button&amp;#39;s states. </Abstract>
    <DeclaredIn>NIButtonUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIApplyBackgroundImageSelectorToButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Button-Utilities.html</Path>
    <Anchor>gNIApplyBackgroundImageSelectorToButton</Anchor>
    <Abstract>Sets the background images for a button&amp;#39;s states. </Abstract>
    <DeclaredIn>NIButtonUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIApplyTitleColorSelectorToButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Button-Utilities.html</Path>
    <Anchor>gNIApplyTitleColorSelectorToButton</Anchor>
    <Abstract>Sets the title colors for a button&amp;#39;s states. </Abstract>
    <DeclaredIn>NIButtonUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Common-Metrics</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Abstract>For common system metrics. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMinimumTapDimension</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIMinimumTapDimension</Anchor>
    <Abstract>The recommended number of points for a minimum tappable area. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIToolbarHeightForOrientation</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIToolbarHeightForOrientation</Anchor>
    <Abstract>Fetch the height of a toolbar in a given orientation. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarAnimationCurve</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIStatusBarAnimationCurve</Anchor>
    <Abstract>The animation curve used when changing the status bar&amp;#39;s visibility. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarAnimationDuration</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIStatusBarAnimationDuration</Anchor>
    <Abstract>The animation duration used when changing the status bar&amp;#39;s visibility. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarBoundsChangeAnimationCurve</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIStatusBarBoundsChangeAnimationCurve</Anchor>
    <Abstract>The animation curve used when the status bar&amp;#39;s bounds change (when a call is received, for example). </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarBoundsChangeAnimationDuration</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIStatusBarBoundsChangeAnimationDuration</Anchor>
    <Abstract>The animation duration used when the status bar&amp;#39;s bounds change (when a call is received, for example). </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarHeight</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIStatusBarHeight</Anchor>
    <Abstract>Get the status bar&amp;#39;s current height. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDeviceRotationDuration</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNIDeviceRotationDuration</Anchor>
    <Abstract>The animation duration when the device is rotating to a new orientation. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICellContentPadding</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Common-Metrics.html</Path>
    <Anchor>gNICellContentPadding</Anchor>
    <Abstract>The padding around a standard cell in a table view. </Abstract>
    <DeclaredIn>NICommonMetrics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Data-Structures</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Data-Structures.html</Path>
    <Abstract>For classic computer science data structures. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Debugging-Tools</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Abstract>For inspecting code and writing to logs in debug builds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDPRINT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDPRINT</Anchor>
    <Abstract>Only writes to the log when DEBUG is defined. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDPRINTMETHODNAME</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDPRINTMETHODNAME</Anchor>
    <Abstract>Write the containing method&amp;#39;s name to the log using NIDPRINT. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDCONDITIONLOG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDCONDITIONLOG</Anchor>
    <Abstract>Only writes to the log if condition is satisified. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDERROR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDERROR</Anchor>
    <Abstract>Only writes to the log if NIMaxLogLevel &amp;gt;= NILOGLEVEL_ERROR. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDWARNING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDWARNING</Anchor>
    <Abstract>Only writes to the log if NIMaxLogLevel &amp;gt;= NILOGLEVEL_WARNING. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDINFO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDINFO</Anchor>
    <Abstract>Only writes to the log if NIMaxLogLevel &amp;gt;= NILOGLEVEL_INFO. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsInDebugger</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIIsInDebugger</Anchor>
    <Abstract>Assertions that only fire when DEBUG is defined. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMaxLogLevel</Name>
      <APILanguage>occ</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIMaxLogLevel</Anchor>
    <Abstract>The maximum log level to output for Nimbus debug logs. </Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDebugAssertionsShouldBreak</Name>
      <APILanguage>occ</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>Debugging-Tools.html</Path>
    <Anchor>gNIDebugAssertionsShouldBreak</Anchor>
    <Abstract>Whether or not debug assertions should halt program execution like a breakpoint when they fail...</Abstract>
    <DeclaredIn>NIDebuggingTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Device-Orientation</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Device-Orientation.html</Path>
    <Abstract>For dealing with device orientations. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsSupportedOrientation</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Device-Orientation.html</Path>
    <Anchor>gNIIsSupportedOrientation</Anchor>
    <Abstract>For use in shouldAutorotateToInterfaceOrientation: </Abstract>
    <DeclaredIn>NIDeviceOrientation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIInterfaceOrientation</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Device-Orientation.html</Path>
    <Anchor>gNIInterfaceOrientation</Anchor>
    <Abstract>Returns the application&amp;#39;s current interface orientation. </Abstract>
    <DeclaredIn>NIDeviceOrientation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsLandscapePhoneOrientation</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Device-Orientation.html</Path>
    <Anchor>gNIIsLandscapePhoneOrientation</Anchor>
    <Abstract>Returns YES if the device is a phone and the orientation is landscape. </Abstract>
    <DeclaredIn>NIDeviceOrientation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRotateTransformForOrientation</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Device-Orientation.html</Path>
    <Anchor>gNIRotateTransformForOrientation</Anchor>
    <Abstract>Creates an affine transform for the given device orientation. </Abstract>
    <DeclaredIn>NIDeviceOrientation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Errors</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Errors.html</Path>
    <Abstract>For defining various error types used throughout the Nimbus framework. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINimbusErrorDomain</Name>
      <APILanguage>occ</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>Errors.html</Path>
    <Anchor>gNINimbusErrorDomain</Anchor>
    <Abstract>The Nimbus error domain. </Abstract>
    <DeclaredIn>NIError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIImageErrorKey</Name>
      <APILanguage>occ</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>Errors.html</Path>
    <Anchor>gNIImageErrorKey</Anchor>
    <Abstract>The key used for images in the error&amp;#39;s userInfo. </Abstract>
    <DeclaredIn>NIError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIImageTooSmall</Name>
      <APILanguage>occ</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>Errors.html</Path>
    <Anchor>ggNINimbusErrorDomainCodeNIImageTooSmall</Anchor>
    <Abstract>The image is too small to be used. </Abstract>
    <DeclaredIn>NIError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Foundation-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Foundation-Methods.html</Path>
    <Abstract>For filling in gaps in Apple&amp;#39;s Foundation framework. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIInvocationWithInstanceTarget</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Foundation-Methods.html</Path>
    <Anchor>gNIInvocationWithInstanceTarget</Anchor>
    <Abstract>Construct an NSInvocation with an instance of an object and a selector. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIInvocationWithClassTarget</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Foundation-Methods.html</Path>
    <Anchor>gNIInvocationWithClassTarget</Anchor>
    <Abstract>Construct an NSInvocation for a class method given a class object and a selector. ...</Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CGRect-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Abstract>For manipulating CGRects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRectContract</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNIRectContract</Anchor>
    <Abstract>Modifies only the right and bottom edges of a CGRect. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRectExpand</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNIRectExpand</Anchor>
    <Abstract>Modifies only the right and bottom edges of a CGRect. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRectShift</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNIRectShift</Anchor>
    <Abstract>Modifies only the top and left edges of a CGRect. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIEdgeInsetsOutsetRect</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNIEdgeInsetsOutsetRect</Anchor>
    <Abstract>Inverse of UIEdgeInsetsInsetRect. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICenterX</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNICenterX</Anchor>
    <Abstract>Returns the x position that will center size within containerSize. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICenterY</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNICenterY</Anchor>
    <Abstract>Returns the y position that will center size within containerSize. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIFrameOfCenteredViewWithinView</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNIFrameOfCenteredViewWithinView</Anchor>
    <Abstract>Returns a rect that will center viewToCenter within containerView. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISizeOfStringWithLabelProperties</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGRect-Methods.html</Path>
    <Anchor>gNISizeOfStringWithLabelProperties</Anchor>
    <Abstract>Returns the size of the string with given UILabel properties. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSRange-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NSRange-Methods.html</Path>
    <Abstract>For manipulating NSRange. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMakeNSRangeFromCFRange</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSRange-Methods.html</Path>
    <Anchor>gNIMakeNSRangeFromCFRange</Anchor>
    <Abstract>Create an NSRange object from a CFRange object. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSData-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NSData-Methods.html</Path>
    <Abstract>For manipulating NSData. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMD5HashFromData</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSData-Methods.html</Path>
    <Anchor>gNIMD5HashFromData</Anchor>
    <Abstract>Calculates an md5 hash of the data using CC_MD5. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISHA1HashFromData</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSData-Methods.html</Path>
    <Anchor>gNISHA1HashFromData</Anchor>
    <Abstract>Calculates a sha1 hash of the data using CC_SHA1. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSString-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Abstract>For manipulating NSStrings. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMD5HashFromString</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNIMD5HashFromString</Anchor>
    <Abstract>Calculates an md5 hash of the string using CC_MD5. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISHA1HashFromString</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNISHA1HashFromString</Anchor>
    <Abstract>Calculates a sha1 hash of the string using CC_SHA1. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsStringWithWhitespaceAndNewlines</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNIIsStringWithWhitespaceAndNewlines</Anchor>
    <Abstract>Returns a Boolean value indicating whether the string is a NSString object that contains only whitesp...</Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICompareVersionStrings</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNICompareVersionStrings</Anchor>
    <Abstract>Compares two strings expressing software versions. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIQueryDictionaryFromStringUsingEncoding</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNIQueryDictionaryFromStringUsingEncoding</Anchor>
    <Abstract>Parses a URL query string into a dictionary where the values are arrays. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStringByAddingPercentEscapesForURLParameterString</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNIStringByAddingPercentEscapesForURLParameterString</Anchor>
    <Abstract>Returns a string that has been escaped for use as a URL parameter. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStringByAddingQueryDictionaryToString</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>NSString-Methods.html</Path>
    <Anchor>gNIStringByAddingQueryDictionaryToString</Anchor>
    <Abstract>Appends a dictionary of query parameters to a string, adding the ? character if necessary. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CGFloat-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Abstract>For manipulating CGFloat. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatAbs</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatAbs</Anchor>
    <Abstract>fabs()/fabsf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatFloor</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatFloor</Anchor>
    <Abstract>floor()/floorf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatCeil</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatCeil</Anchor>
    <Abstract>ceil()/ceilf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatRound</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatRound</Anchor>
    <Abstract>round()/roundf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatSqRt</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatSqRt</Anchor>
    <Abstract>sqrt()/sqrtf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatCopySign</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatCopySign</Anchor>
    <Abstract>copysign()/copysignf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatPow</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatPow</Anchor>
    <Abstract>pow()/powf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICGFloatCos</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>CGFloat-Methods.html</Path>
    <Anchor>gNICGFloatCos</Anchor>
    <Abstract>cos()/cosf() sized for CGFloat </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>General-Purpose-Methods</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>General-Purpose-Methods.html</Path>
    <Abstract>For general purpose foundation type manipulation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundf</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>General-Purpose-Methods.html</Path>
    <Anchor>gboundf</Anchor>
    <Abstract>Deprecated method. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundi</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>General-Purpose-Methods.html</Path>
    <Anchor>gboundi</Anchor>
    <Abstract>Deprecated method. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIBoundf</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>General-Purpose-Methods.html</Path>
    <Anchor>gNIBoundf</Anchor>
    <Abstract>Bounds a given value within the min and max values. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIBoundi</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>General-Purpose-Methods.html</Path>
    <Anchor>gNIBoundi</Anchor>
    <Abstract>Bounds a given value within the min and max values. </Abstract>
    <DeclaredIn>NIFoundationMethods.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Image-Utilities</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Image-Utilities.html</Path>
    <Abstract>For manipulating UIImage objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStretchableImageFromImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Image-Utilities.html</Path>
    <Anchor>gNIStretchableImageFromImage</Anchor>
    <Abstract>Returns an image that is stretchable from the center. </Abstract>
    <DeclaredIn>NIImageUtilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>In-Memory-Caches</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>In-Memory-Caches.html</Path>
    <Abstract>For storing and accessing objects in memory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusCore</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusCore.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Network-Activity</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Network-Activity.html</Path>
    <Abstract>For showing network activity in the device&amp;#39;s status bar. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkActivityTaskDidStart</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Network-Activity.html</Path>
    <Anchor>gNINetworkActivityTaskDidStart</Anchor>
    <Abstract>Increment the number of active network tasks. </Abstract>
    <DeclaredIn>NINetworkActivity.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkActivityTaskDidFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Network-Activity.html</Path>
    <Anchor>gNINetworkActivityTaskDidFinish</Anchor>
    <Abstract>Decrement the number of active network tasks. </Abstract>
    <DeclaredIn>NINetworkActivity.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIEnableNetworkActivityDebugging</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Network-Activity.html</Path>
    <Anchor>gNIEnableNetworkActivityDebugging</Anchor>
    <Abstract>Enable network activity debugging. </Abstract>
    <DeclaredIn>NINetworkActivity.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDisableNetworkActivityDebugging</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Network-Activity.html</Path>
    <Anchor>gNIDisableNetworkActivityDebugging</Anchor>
    <Abstract>Disable network activity debugging. </Abstract>
    <DeclaredIn>NINetworkActivity.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Non-Empty-Collection-Testing</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Non-Empty-Collection-Testing.html</Path>
    <Abstract>For testing whether a collection is of a certain type and is non-empty. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsArrayWithObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Non-Empty-Collection-Testing.html</Path>
    <Anchor>gNIIsArrayWithObjects</Anchor>
    <Abstract>Tests if an object is a non-nil array which is not empty. </Abstract>
    <DeclaredIn>NINonEmptyCollectionTesting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsSetWithObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Non-Empty-Collection-Testing.html</Path>
    <Anchor>gNIIsSetWithObjects</Anchor>
    <Abstract>Tests if an object is a non-nil set which is not empty. </Abstract>
    <DeclaredIn>NINonEmptyCollectionTesting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsStringWithAnyText</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Non-Empty-Collection-Testing.html</Path>
    <Anchor>gNIIsStringWithAnyText</Anchor>
    <Abstract>Tests if an object is a non-nil string which is not empty. </Abstract>
    <DeclaredIn>NINonEmptyCollectionTesting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Non-Retaining-Collections</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Non-Retaining-Collections.html</Path>
    <Abstract>For collections that don&amp;#39;t retain their objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICreateNonRetainingMutableArray</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Non-Retaining-Collections.html</Path>
    <Anchor>gNICreateNonRetainingMutableArray</Anchor>
    <Abstract>Creates a mutable array which does not retain references to the objects it contains. </Abstract>
    <DeclaredIn>NINonRetainingCollections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICreateNonRetainingMutableDictionary</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Non-Retaining-Collections.html</Path>
    <Anchor>gNICreateNonRetainingMutableDictionary</Anchor>
    <Abstract>Creates a mutable dictionary which does not retain references to the values it contains. </Abstract>
    <DeclaredIn>NINonRetainingCollections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICreateNonRetainingMutableSet</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Non-Retaining-Collections.html</Path>
    <Anchor>gNICreateNonRetainingMutableSet</Anchor>
    <Abstract>Creates a mutable set which does not retain references to the values it contains. ...</Abstract>
    <DeclaredIn>NINonRetainingCollections.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Operations</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Operations.html</Path>
    <Abstract>For writing code that runs concurrently. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Paths</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Paths.html</Path>
    <Abstract>For creating standard system paths. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPathForBundleResource</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Paths.html</Path>
    <Anchor>gNIPathForBundleResource</Anchor>
    <Abstract>Create a path with the given bundle and the relative path appended. </Abstract>
    <DeclaredIn>NIPaths.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPathForDocumentsResource</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Paths.html</Path>
    <Anchor>gNIPathForDocumentsResource</Anchor>
    <Abstract>Create a path with the documents directory and the relative path appended. </Abstract>
    <DeclaredIn>NIPaths.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPathForLibraryResource</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Paths.html</Path>
    <Anchor>gNIPathForLibraryResource</Anchor>
    <Abstract>Create a path with the Library directory and the relative path appended. </Abstract>
    <DeclaredIn>NIPaths.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPathForCachesResource</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Paths.html</Path>
    <Anchor>gNIPathForCachesResource</Anchor>
    <Abstract>Create a path with the caches directory and the relative path appended. </Abstract>
    <DeclaredIn>NIPaths.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Preprocessor-Macros</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Preprocessor-Macros.html</Path>
    <Abstract>Preprocessor macros are added to Nimbus with care. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__NI_DEPRECATED_METHOD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Preprocessor-Macros.html</Path>
    <Anchor>g__NI_DEPRECATED_METHOD</Anchor>
    <Abstract>Mark a method or property as deprecated to the compiler. </Abstract>
    <DeclaredIn>NIPreprocessorMacros.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NI_FIX_CATEGORY_BUG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Preprocessor-Macros.html</Path>
    <Anchor>gNI_FIX_CATEGORY_BUG</Anchor>
    <Abstract>Force a category to be loaded when an app starts up. </Abstract>
    <DeclaredIn>NIPreprocessorMacros.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RGBCOLOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Preprocessor-Macros.html</Path>
    <Anchor>gRGBCOLOR</Anchor>
    <Abstract>Creates an opaque UIColor object from a byte-value color definition. </Abstract>
    <DeclaredIn>NIPreprocessorMacros.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RGBACOLOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>Preprocessor-Macros.html</Path>
    <Anchor>gRGBACOLOR</Anchor>
    <Abstract>Creates a UIColor object from a byte-value color definition and alpha transparency. </Abstract>
    <DeclaredIn>NIPreprocessorMacros.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Runtime-Class-Modifications</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Runtime-Class-Modifications.html</Path>
    <Abstract>For modifying class implementations at runtime. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISwapInstanceMethods</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Runtime-Class-Modifications.html</Path>
    <Anchor>gNISwapInstanceMethods</Anchor>
    <Abstract>Swap two class instance method implementations. </Abstract>
    <DeclaredIn>NIRuntimeClassModifications.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISwapClassMethods</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Runtime-Class-Modifications.html</Path>
    <Anchor>gNISwapClassMethods</Anchor>
    <Abstract>Swap two class method implementations. </Abstract>
    <DeclaredIn>NIRuntimeClassModifications.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SDK-Availability</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Abstract>For checking SDK feature availibility. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_2_0</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_2_0</Anchor>
    <Abstract>Released on July 11, 2008. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_2_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_2_1</Anchor>
    <Abstract>Released on September 9, 2008. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_2_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_2_2</Anchor>
    <Abstract>Released on November 21, 2008. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_3_0</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_3_0</Anchor>
    <Abstract>Released on June 17, 2009. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_3_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_3_1</Anchor>
    <Abstract>Released on September 9, 2009. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_3_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_3_2</Anchor>
    <Abstract>Released on April 3, 2010. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_0</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_4_0</Anchor>
    <Abstract>Released on June 21, 2010. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_4_1</Anchor>
    <Abstract>Released on September 8, 2010. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_4_2</Anchor>
    <Abstract>Released on November 22, 2010. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_4_3</Anchor>
    <Abstract>Released on March 9, 2011. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_5_0</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_5_0</Anchor>
    <Abstract>Released on October 12, 2011. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_5_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_5_1</Anchor>
    <Abstract>Released on March 7, 2012. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_6_0</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_6_0</Anchor>
    <Abstract>Released on September 19, 2012. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_6_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_6_1</Anchor>
    <Abstract>Released on January 28, 2013. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_7_0</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIOS_7_0</Anchor>
    <Abstract>Released on September 18, 2013. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsPad</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIsPad</Anchor>
    <Abstract>Checks whether the device the app is currently running on is an iPad or not. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsPhone</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIsPhone</Anchor>
    <Abstract>Checks whether the device the app is currently running on is an iPhone/iPod touch or not...</Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsTintColorGloballySupported</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIsTintColorGloballySupported</Anchor>
    <Abstract>Checks whether the device supports tint colors on all UIViews. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDeviceOSVersionIsAtLeast</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIDeviceOSVersionIsAtLeast</Anchor>
    <Abstract>Checks whether the device&amp;#39;s OS version is at least the given version number. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIScreenScale</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIScreenScale</Anchor>
    <Abstract>Fetch the screen&amp;#39;s scale. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsRetina</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIIsRetina</Anchor>
    <Abstract>Returns YES if the screen is a retina display, NO otherwise. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIUIPopoverControllerClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIUIPopoverControllerClass</Anchor>
    <Abstract>This method is now deprecated. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIUITapGestureRecognizerClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>SDK-Availability.html</Path>
    <Anchor>gNIUITapGestureRecognizerClass</Anchor>
    <Abstract>This method is now deprecated. </Abstract>
    <DeclaredIn>NISDKAvailability.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Snapshot-Rotation</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Snapshot-Rotation.html</Path>
    <Abstract>An object designed to easily implement snapshot rotation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISnapshotOfView</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Snapshot-Rotation.html</Path>
    <Anchor>gNISnapshotOfView</Anchor>
    <Abstract>Returns an opaque UIImage snapshot of the given view. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISnapshotViewOfView</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Snapshot-Rotation.html</Path>
    <Anchor>gNISnapshotViewOfView</Anchor>
    <Abstract>Returns a UIImageView with an image snapshot of the given view. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISnapshotOfViewWithTransparency</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Snapshot-Rotation.html</Path>
    <Anchor>gNISnapshotOfViewWithTransparency</Anchor>
    <Abstract>Returns a UIImage snapshot of the given view with transparency. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISnapshotViewOfViewWithTransparency</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>Snapshot-Rotation.html</Path>
    <Anchor>gNISnapshotViewOfViewWithTransparency</Anchor>
    <Abstract>Returns a UIImageView with an image snapshot with transparency of the given view. ...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Core-State</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Core-State.html</Path>
    <Abstract>For modifying Nimbus state information. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Core-View-Recycling</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Core-View-Recycling.html</Path>
    <Abstract>For recycling views in scroll views. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusCSS</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusCSS.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStylesheetDidChangeNotification</Name>
      <APILanguage>occ</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>NimbusCSS.html</Path>
    <Anchor>gNIStylesheetDidChangeNotification</Anchor>
    <Abstract>The notification key for when a stylesheet has changed. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStringsDidChangeNotification</Name>
      <APILanguage>occ</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>NimbusCSS.html</Path>
    <Anchor>gNIStringsDidChangeNotification</Anchor>
    <Abstract>The notification key for when a strings file has changed. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-History</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-History.html</Path>
    <Abstract>Presented here are the API diffs for each major release of Nimbus. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-1-2-1</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-1-2-1.html</Path>
    <Abstract>Version 1.2.1 of Nimbus was released on February 21, 2014. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-1-2-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-1-2-0.html</Path>
    <Abstract>Version 1.2.0 of Nimbus was released on February 15, 2014. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-1-1-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-1-1-0.html</Path>
    <Abstract>Version 1.1.0 of Nimbus was released on February 14, 2014. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-1-0-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-1-0-0.html</Path>
    <Abstract>Version 1.0.0 of Nimbus was released on December 10, 2012. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-9-3</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-9-3.html</Path>
    <Abstract>Version 0.9.3 of Nimbus was released on June 10, 2012. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-9-2</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-9-2.html</Path>
    <Abstract>Version 0.9.2 of Nimbus was released on February 19, 2012. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-9-1</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-9-1.html</Path>
    <Abstract>Version 0.9.1 of Nimbus was released on December 5, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-9-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-9-0.html</Path>
    <Abstract>Version 0.9.0 of Nimbus was released on October 24, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-8-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-8-0.html</Path>
    <Abstract>Version 0.8.0 of Nimbus was released on September 28, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-7-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-7-0.html</Path>
    <Abstract>Version 0.7.0 of Nimbus was released on August 19, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-6-1</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-6-1.html</Path>
    <Abstract>Version 0.6.1 of Nimbus was released on August 8, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-6-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-6-0.html</Path>
    <Abstract>Version 0.6.0 of Nimbus was released on August 4, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-5-0</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-5-0.html</Path>
    <Abstract>Version 0.5.0 of Nimbus was released on July 29, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-4</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-4.html</Path>
    <Abstract>Version 0.4 of Nimbus was released on July 20, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-4-1</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-4-1.html</Path>
    <Abstract>Version 0.4.1 of Nimbus was released on July 22, 2011. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-3</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-3.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-2</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-2.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-1</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Version-1.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusInterapp</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusInterapp.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusLauncher</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusLauncher.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusLauncherModel</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusLauncherModel.html</Path>
    <Abstract>The Nimbus Launcher provides a model object that can store all of the launcher data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusModels</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusModels.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TableViewModels</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>TableViewModels.html</Path>
    <Abstract>Nimbus table view models make building table views remarkably easy. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TableCellFactory</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>TableCellFactory.html</Path>
    <Abstract>A table cell factory automatically creates UITableViewCells from objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TableCellCatalog</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>TableCellCatalog.html</Path>
    <Abstract>This is a catalog of Nimbus&amp;#39; pre-built cells and objects for use in UITableViews. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TableCellBackgrounds</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>TableCellBackgrounds.html</Path>
    <Abstract>NICellBackground is a tool for creating backgrounds that can be used to customize cells in UITableVie...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ModelTools</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>ModelTools.html</Path>
    <Abstract>Model tools are objects that abstract common functionality used in view controllers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusNetworkControllers</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusNetworkControllers.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusNetworkImage</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusNetworkImage.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusOverview</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusOverview.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Overview-Sensors</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Overview-Sensors.html</Path>
    <Abstract>The sensors used to power the Overview. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Overview</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Overview.html</Path>
    <Abstract>The primary classes you&amp;#39;ll use when dealing with the Overview. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Overview-Logger</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Overview-Logger.html</Path>
    <Abstract>The Overview logger. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Overview-Pages</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Overview-Pages.html</Path>
    <Abstract>The pages that are shown in the Overview. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Overview-Logger-Entries</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>Overview-Logger-Entries.html</Path>
    <Abstract>Log entries for the Overview logger. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusPagingScrollView</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusPagingScrollView.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusPhotos</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusPhotos.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusWebController</Name>
      <APILanguage>occ</APILanguage>
    </TokenIdentifier>
    <Path>NimbusWebController.html</Path>
    <Abstract> </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIActions</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>NIActions.html</Path>
    <Abstract>The NIActions class provides a generic interface for attaching actions to objects. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTarget:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>ginitWithTarget:</Anchor>
    <Abstract>Initializes a newly allocated table view actions object with the given target. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapBlock:</Anchor>
    <Abstract>Attaches a tap action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailBlock:</Anchor>
    <Abstract>Attaches a detail action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapBlock:</Anchor>
    <Abstract>Attaches a tap block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailBlock:</Anchor>
    <Abstract>Attaches a detail block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectActionable:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gisObjectActionable:</Anchor>
    <Abstract>Returns whether or not the object has any actions attached to it. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromKeyClass:map:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gobjectFromKeyClass:map:</Anchor>
    <Abstract>Returns a mapped object from the given key class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIAttributedLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Abstract>The NIAttributedLabel class provides support for displaying rich text with selectable links and embed...</Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributedString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>attributedString</Anchor>
    <Abstract>This method is now deprecated and will eventually be removed, please use attributedText instead...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autoDetectLinks</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>autoDetectLinks</Anchor>
    <Abstract>A Booelan value indicating whether to automatically detect links in the string. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataDetectorTypes</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>dataDetectorTypes</Anchor>
    <Abstract>The types of data that will be detected when autoDetectLinks is enabled. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deferLinkDetection</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>deferLinkDetection</Anchor>
    <Abstract>A Boolean value indicating whether to defer link detection to a separate thread. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLink:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>addLink:range:</Anchor>
    <Abstract>Adds a link to a URL at a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllExplicitLinks</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>removeAllExplicitLinks</Anchor>
    <Abstract>Removes all explicit links from the label. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>linkColor</Anchor>
    <Abstract>The text color of detected links. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>highlightedLinkBackgroundColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>highlightedLinkBackgroundColor</Anchor>
    <Abstract>The background color of the link&amp;#39;s selection frame when the user is touching the link. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linksHaveUnderlines</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>linksHaveUnderlines</Anchor>
    <Abstract>A Boolean value indicating whether links should have underlines. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributesForLinks</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>attributesForLinks</Anchor>
    <Abstract>A dictionary of CoreText attributes to apply to links. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributesForHighlightedLink</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>attributesForHighlightedLink</Anchor>
    <Abstract>A dictionary of CoreText attributes to apply to the highlighted link. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lineHeight</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>lineHeight</Anchor>
    <Abstract>Sets the line height for the text. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>verticalTextAlignment</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>verticalTextAlignment</Anchor>
    <Abstract>The vertical alignment of the text within the label&amp;#39;s bounds. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>underlineStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>underlineStyle</Anchor>
    <Abstract>The underline style for the entire label. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>underlineStyleModifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>underlineStyleModifier</Anchor>
    <Abstract>The underline style modifier for the entire label. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shadowBlur</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>shadowBlur</Anchor>
    <Abstract>A non-negative number specifying the amount of blur to apply to the label&amp;#39;s text shadow. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>strokeWidth</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>strokeWidth</Anchor>
    <Abstract>Sets the stroke width for the text. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>strokeColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>strokeColor</Anchor>
    <Abstract>Sets the stroke color for the text. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textKern</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>textKern</Anchor>
    <Abstract>Sets the kern for the text. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tailTruncationString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>tailTruncationString</Anchor>
    <Abstract>The string to display for tail truncation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate of the attributed-label object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFont:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>setFont:range:</Anchor>
    <Abstract>Sets the font for text in a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStrokeColor:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>setStrokeColor:range:</Anchor>
    <Abstract>Sets the stroke color for text in a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStrokeWidth:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>setStrokeWidth:range:</Anchor>
    <Abstract>Sets the stroke width for text in a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextColor:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>setTextColor:range:</Anchor>
    <Abstract>Sets the text color for text in a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextKern:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>setTextKern:range:</Anchor>
    <Abstract>Sets the kern for text in a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnderlineStyle:modifier:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>setUnderlineStyle:modifier:range:</Anchor>
    <Abstract>Sets the underline style and modifier for text in a given range. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertImage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>insertImage:atIndex:</Anchor>
    <Abstract>Inserts the given image inline at the given index in the receiver&amp;#39;s text. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertImage:atIndex:margins:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>insertImage:atIndex:margins:</Anchor>
    <Abstract>Inserts the given image inline at the given index in the receiver&amp;#39;s text. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertImage:atIndex:margins:verticalTextAlignment:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>insertImage:atIndex:margins:verticalTextAlignment:</Anchor>
    <Abstract>Inserts the given image inline at the given index in the receiver&amp;#39;s text. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidateAccessibleElements</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIAttributedLabel</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabel.html</Path>
    <Anchor>invalidateAccessibleElements</Anchor>
    <Abstract>Invalidates this label&amp;#39;s accessible elements. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIAttributedLabelDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIAttributedLabelDelegate</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabelDelegate-Protocol.html</Path>
    <Abstract>The methods declared by the NIAttributedLabelDelegate protocol allow the adopting delegate to respond...</Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributedLabel:didSelectTextCheckingResult:atPoint:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIAttributedLabelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabelDelegate-Protocol.html</Path>
    <Anchor>attributedLabel:didSelectTextCheckingResult:atPoint:</Anchor>
    <Abstract>Informs the receiver that a data detector result has been selected. </Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributedLabel:shouldPresentActionSheet:withTextCheckingResult:atPoint:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIAttributedLabelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIAttributedLabelDelegate-Protocol.html</Path>
    <Anchor>attributedLabel:shouldPresentActionSheet:withTextCheckingResult:atPoint:</Anchor>
    <Abstract>Asks the receiver whether an action sheet should be displayed at the given point. ...</Abstract>
    <DeclaredIn>NIAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIBadgeView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Abstract>A view that mimics the iOS notification badge style. </Abstract>
    <DeclaredIn>NIBadgeView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>text</Anchor>
    <Abstract>The text displayed within the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>font</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>font</Anchor>
    <Abstract>The font of the text within the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>textColor</Anchor>
    <Abstract>The color of the text in the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tintColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>tintColor</Anchor>
    <Abstract>The tint color of the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shadowColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>shadowColor</Anchor>
    <Abstract>The shadow color of the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shadowOffset</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>shadowOffset</Anchor>
    <Abstract>The shadow offset (measured in points) for the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shadowBlur</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIBadgeView</Scope>
    </TokenIdentifier>
    <Path>NIBadgeView.html</Path>
    <Anchor>shadowBlur</Anchor>
    <Abstract>The shadow blur (measured in points) for the badge. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICell</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICell</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Abstract>The protocol for a cell created in the NICellFactory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICellFactory</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICellFactory</Scope>
    </TokenIdentifier>
    <Path>NICellFactory.html</Path>
    <Abstract>A simple factory for creating table view cells from objects. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:cellForTableView:atIndexPath:withObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NICellFactory</Scope>
    </TokenIdentifier>
    <Path>NICellFactory.html</Path>
    <Anchor>tableViewModel:cellForTableView:atIndexPath:withObject:</Anchor>
    <Abstract>Creates a cell from a given object if and only if the object conforms to the NICellObject protocol...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectClass:toCellClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICellFactory</Scope>
    </TokenIdentifier>
    <Path>NICellFactory.html</Path>
    <Anchor>mapObjectClass:toCellClass:</Anchor>
    <Abstract>Map an object&amp;#39;s class to a cell&amp;#39;s class. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableView:heightForRowAtIndexPath:model:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICellFactory</Scope>
    </TokenIdentifier>
    <Path>NICellFactory.html</Path>
    <Anchor>tableView:heightForRowAtIndexPath:model:</Anchor>
    <Abstract>Returns the height for a row at a given index path. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableView:heightForRowAtIndexPath:model:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NICellFactory</Scope>
    </TokenIdentifier>
    <Path>NICellFactory.html</Path>
    <Anchor>tableView:heightForRowAtIndexPath:model:</Anchor>
    <Abstract>Returns the height for a row at a given index path. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICellObject</Scope>
    </TokenIdentifier>
    <Path>NICellObject.html</Path>
    <Abstract>A light-weight implementation of the NICellObject protocol. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICellObject</Scope>
    </TokenIdentifier>
    <Path>NICellObject.html</Path>
    <Anchor>userInfo</Anchor>
    <Abstract>An object that can be used to populate information in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICellObject</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Abstract>The protocol for an object that can be used in the NICellFactory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIChameleonObserver</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIChameleonObserver</Scope>
    </TokenIdentifier>
    <Path>NIChameleonObserver.html</Path>
    <Abstract>An observer for the Chameleon server. </Abstract>
    <DeclaredIn>NIChameleonObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithStylesheetCache:host:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIChameleonObserver</Scope>
    </TokenIdentifier>
    <Path>NIChameleonObserver.html</Path>
    <Anchor>initWithStylesheetCache:host:</Anchor>
    <Abstract>Initializes a newly allocated Chameleon observer with a given stylesheet cache and host...</Abstract>
    <DeclaredIn>NIChameleonObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stylesheetForPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIChameleonObserver</Scope>
    </TokenIdentifier>
    <Path>NIChameleonObserver.html</Path>
    <Anchor>stylesheetForPath:</Anchor>
    <Abstract>Returns a loaded stylesheet from the given path. </Abstract>
    <DeclaredIn>NIChameleonObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>watchSkinChanges</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIChameleonObserver</Scope>
    </TokenIdentifier>
    <Path>NIChameleonObserver.html</Path>
    <Anchor>watchSkinChanges</Anchor>
    <Abstract>Begins listening to the Chameleon server for changes. </Abstract>
    <DeclaredIn>NIChameleonObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableBonjourDiscovery:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIChameleonObserver</Scope>
    </TokenIdentifier>
    <Path>NIChameleonObserver.html</Path>
    <Anchor>enableBonjourDiscovery:</Anchor>
    <Abstract>Browses Bonjour for services with the given name (e.g. </Abstract>
    <DeclaredIn>NIChameleonObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cssParser:pathFromPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICSSParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NICSSParserDelegate-Protocol.html</Path>
    <Anchor>cssParser:pathFromPath:</Anchor>
    <Abstract>The implementor may use this method to change the filename that will be used to load the CSS file fro...</Abstract>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidStart:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidStart:</Anchor>
    <Abstract>The operation has started executing. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationWillFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationWillFinish:</Anchor>
    <Abstract>The operation is about to complete successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidFinish:</Anchor>
    <Abstract>The operation has completed successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidFail:withError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidFail:withError:</Anchor>
    <Abstract>The operation failed in some way and has completed. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewActions</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICollectionViewActions</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewActions.html</Path>
    <Abstract>The NICollectionViewActions class provides an interface for attaching actions to objects in a NIColle...</Abstract>
    <DeclaredIn>NICollectionViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionView:shouldHighlightItemAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewActions</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewActions.html</Path>
    <Anchor>collectionView:shouldHighlightItemAtIndexPath:</Anchor>
    <Abstract>Asks the receiver whether the object at the given index path is actionable. </Abstract>
    <DeclaredIn>NICollectionViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionView:didSelectItemAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewActions</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewActions.html</Path>
    <Anchor>collectionView:didSelectItemAtIndexPath:</Anchor>
    <Abstract>Asks the receiver to perform the tap action for an object at the given indexPath. ...</Abstract>
    <DeclaredIn>NICollectionViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTarget:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>ginitWithTarget:</Anchor>
    <Abstract>Initializes a newly allocated table view actions object with the given target. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapBlock:</Anchor>
    <Abstract>Attaches a tap action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailBlock:</Anchor>
    <Abstract>Attaches a detail action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapBlock:</Anchor>
    <Abstract>Attaches a tap block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailBlock:</Anchor>
    <Abstract>Attaches a detail block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectActionable:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gisObjectActionable:</Anchor>
    <Abstract>Returns whether or not the object has any actions attached to it. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromKeyClass:map:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gobjectFromKeyClass:map:</Anchor>
    <Abstract>Returns a mapped object from the given key class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICollectionViewCell</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCell-Protocol.html</Path>
    <Abstract>The protocol for a cell created in the NICollectionViewCellFactory. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewCell-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called both when a cell is created and when it is reused. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICollectionViewCell-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewCellFactory</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICollectionViewCellFactory</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellFactory.html</Path>
    <Abstract>A simple factory for creating collection view cells from objects. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewModel:cellForCollectionView:atIndexPath:withObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NICollectionViewCellFactory</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellFactory.html</Path>
    <Anchor>collectionViewModel:cellForCollectionView:atIndexPath:withObject:</Anchor>
    <Abstract>Creates a cell from a given object if and only if the object conforms to the NICollectionViewCellObje...</Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectClass:toCellClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewCellFactory</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellFactory.html</Path>
    <Anchor>mapObjectClass:toCellClass:</Anchor>
    <Abstract>Map an object&amp;#39;s class to a cell&amp;#39;s class. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewCellClassForItemAtIndexPath:model:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewCellFactory</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellFactory.html</Path>
    <Anchor>collectionViewCellClassForItemAtIndexPath:model:</Anchor>
    <Abstract>Returns the mapped cell class for an object at a given index path. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewCellClassForItemAtIndexPath:model:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NICollectionViewCellFactory</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellFactory.html</Path>
    <Anchor>collectionViewCellClassForItemAtIndexPath:model:</Anchor>
    <Abstract>Returns the mapped cell class for an object at a given index path. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewModel:collectionView:viewForSupplementaryElementOfKind:atIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModelDelegate-Protocol.html</Path>
    <Anchor>collectionViewModel:collectionView:viewForSupplementaryElementOfKind:atIndexPath:</Anchor>
    <Abstract>Fetches a supplementary collection view element at a given indexPath. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICollectionViewCellObject</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellObject.html</Path>
    <Abstract>A light-weight implementation of the NICollectionViewCellObject protocol. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICollectionViewCellObject</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellObject.html</Path>
    <Anchor>userInfo</Anchor>
    <Abstract>An object that can be used to populate information in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewCellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewCellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellObject-Protocol.html</Path>
    <Anchor>collectionViewCellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICollectionViewCellObject</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellObject-Protocol.html</Path>
    <Abstract>The protocol for an object that can be used in the NICollectionViewCellFactory. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewCellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewCellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewCellObject-Protocol.html</Path>
    <Anchor>collectionViewCellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewModel</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Abstract>A non-mutable collection view model that complies to the UICollectionViewDataSource protocol...</Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>A delegate used to fetch collection view cells for the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>initWithDelegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the given delegate and empty contents. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithListArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>initWithListArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a list array. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithSectionedArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>initWithSectionedArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a sectioned array. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>objectAtIndexPath:</Anchor>
    <Abstract>Returns the object at the given index path. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexPathForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>indexPathForObject:</Anchor>
    <Abstract>Returns the index path of the given object within the model. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewModelDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICollectionViewModelDelegate</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModelDelegate-Protocol.html</Path>
    <Abstract>A protocol for NICollectionViewModel to fetch rows to be displayed for the collection view...</Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewModel:cellForCollectionView:atIndexPath:withObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModelDelegate-Protocol.html</Path>
    <Anchor>collectionViewModel:cellForCollectionView:atIndexPath:withObject:</Anchor>
    <Abstract>Fetches a collection view cell at a given index path with a given object. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewModel:collectionView:viewForSupplementaryElementOfKind:atIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModelDelegate-Protocol.html</Path>
    <Anchor>collectionViewModel:collectionView:viewForSupplementaryElementOfKind:atIndexPath:</Anchor>
    <Abstract>Fetches a supplementary collection view element at a given indexPath. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewModelFooter</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICollectionViewModelFooter</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModelFooter.html</Path>
    <Abstract>An object used in sectioned arrays to denote a section footer title. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICollectionViewNibCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICollectionViewNibCellObject</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewNibCellObject-Protocol.html</Path>
    <Abstract>The protocol for an object that can be used in the NICollectionViewCellFactory with Interface Builder...</Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collectionViewCellNib</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICollectionViewNibCellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewNibCellObject-Protocol.html</Path>
    <Anchor>collectionViewCellNib</Anchor>
    <Abstract>A nib that contains a collection view cell to display this object&amp;#39;s contents. </Abstract>
    <DeclaredIn>NICollectionViewCellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICSSParser</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICSSParser</Scope>
    </TokenIdentifier>
    <Path>NICSSParser.html</Path>
    <Abstract>An Objective-C wrapper for the flex CSS parser. </Abstract>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFailToParse</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICSSParser</Scope>
    </TokenIdentifier>
    <Path>NICSSParser.html</Path>
    <Anchor>didFailToParse</Anchor>
    <Abstract>Will be YES after retrieving a dictionary if the parser failed to parse the file in any way...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dictionaryForPath:pathPrefix:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSParser</Scope>
    </TokenIdentifier>
    <Path>NICSSParser.html</Path>
    <Anchor>dictionaryForPath:pathPrefix:delegate:</Anchor>
    <Abstract>Reads a CSS file from a given path and returns a dictionary of raw CSS rule sets. ...</Abstract>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dictionaryForPath:pathPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSParser</Scope>
    </TokenIdentifier>
    <Path>NICSSParser.html</Path>
    <Anchor>dictionaryForPath:pathPrefix:</Anchor>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dictionaryForPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSParser</Scope>
    </TokenIdentifier>
    <Path>NICSSParser.html</Path>
    <Anchor>dictionaryForPath:</Anchor>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICSSParserDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NICSSParserDelegate</Scope>
    </TokenIdentifier>
    <Path>NICSSParserDelegate-Protocol.html</Path>
    <Abstract>The delegate protocol for NICSSParser. </Abstract>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cssParser:pathFromPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICSSParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NICSSParserDelegate-Protocol.html</Path>
    <Anchor>cssParser:pathFromPath:</Anchor>
    <Abstract>The implementor may use this method to change the filename that will be used to load the CSS file fro...</Abstract>
    <DeclaredIn>NICSSParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICSSRuleset</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Abstract>A simple translator from raw CSS rulesets to Objective-C values. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addEntriesFromDictionary:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>addEntriesFromDictionary:</Anchor>
    <Abstract>Adds a raw CSS ruleset to this ruleset object. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTextColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasTextColor</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;color&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>textColor</Anchor>
    <Abstract>Returns the text color. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTextAlignment</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasTextAlignment</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;text-align&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textAlignment</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>textAlignment</Anchor>
    <Abstract>Returns the text alignment. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFont</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasFont</Anchor>
    <Abstract>Returns YES if the ruleset has a value for any of the following properties: font, font-family...</Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>font</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>font</Anchor>
    <Abstract>Returns the font. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTextShadowColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasTextShadowColor</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;text-shadow&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textShadowColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>textShadowColor</Anchor>
    <Abstract>Returns the text shadow color. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTextShadowOffset</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasTextShadowOffset</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;text-shadow&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textShadowOffset</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>textShadowOffset</Anchor>
    <Abstract>Returns the text shadow offset. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLineBreakMode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasLineBreakMode</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;-ios-line-break-mode&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lineBreakMode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>lineBreakMode</Anchor>
    <Abstract>Returns the line break mode. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNumberOfLines</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasNumberOfLines</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;-ios-number-of-lines&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfLines</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>numberOfLines</Anchor>
    <Abstract>Returns the number of lines. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMinimumFontSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasMinimumFontSize</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;-ios-minimum-font-size&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimumFontSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>minimumFontSize</Anchor>
    <Abstract>Returns the minimum font size. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasAdjustsFontSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasAdjustsFontSize</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;-ios-adjusts-font-size&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustsFontSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>adjustsFontSize</Anchor>
    <Abstract>Returns the adjustsFontSize value. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBaselineAdjustment</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasBaselineAdjustment</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;-ios-baseline-adjustment&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>baselineAdjustment</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>baselineAdjustment</Anchor>
    <Abstract>Returns the baseline adjustment. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasOpacity</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasOpacity</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;opacity&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>opacity</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>opacity</Anchor>
    <Abstract>Returns the opacity. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBackgroundColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasBackgroundColor</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;background-color&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>backgroundColor</Anchor>
    <Abstract>Returns the background color. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBorderRadius</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasBorderRadius</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;border-radius&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>borderRadius</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>borderRadius</Anchor>
    <Abstract>Returns the border radius. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBorderColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasBorderColor</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;border&amp;#39; or &amp;#39;border-color&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>borderColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>borderColor</Anchor>
    <Abstract>Returns the border color. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBorderWidth</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasBorderWidth</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;border&amp;#39; or &amp;#39;border-width&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>borderWidth</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>borderWidth</Anchor>
    <Abstract>Returns the border width. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasWidth</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasWidth</Anchor>
    <Abstract>Returns YES if the ruleset has a &amp;#39;width&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>width</Anchor>
    <Abstract>Returns the width. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>top</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>top</Anchor>
    <Abstract>In combination with relativeToId, the margin fields control how a view is positioned relative to anot...</Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottom</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>bottom</Anchor>
    <Abstract>In combination with relativeToId, the margin fields control how a view is positioned relative to anot...</Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>left</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>left</Anchor>
    <Abstract>In combination with relativeToId, the margin fields control how a view is positioned relative to anot...</Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>right</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>right</Anchor>
    <Abstract>In combination with relativeToId, the margin fields control how a view is positioned relative to anot...</Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasTintColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>hasTintColor</Anchor>
    <Abstract>Returns YES if the ruleset has an &amp;#39;-ios-tint-color&amp;#39; property. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tintColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>tintColor</Anchor>
    <Abstract>Returns the tint color. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>relativeToId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>relativeToId</Anchor>
    <Abstract>When relativeToId is set, a view will be positioned using margin-* directives relative to the view id...</Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>horizontalPadding</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>horizontalPadding</Anchor>
    <Abstract>For views that support sizeToFit, padding will add a value to the computed size. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>verticalPadding</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICSSRuleset</Scope>
    </TokenIdentifier>
    <Path>NICSSRuleset.html</Path>
    <Anchor>verticalPadding</Anchor>
    <Abstract>For views that support sizeToFit, padding will add a value to the computed size. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICSSUnit</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NICSSUnit</Scope>
    </TokenIdentifier>
    <Path>structNICSSUnit.html</Path>
    <Abstract>Width, height, top, left, right, bottom can be expressed in various units. </Abstract>
    <DeclaredIn>NICSSRuleset.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDatePickerFormElement</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIDatePickerFormElement</Scope>
    </TokenIdentifier>
    <Path>NIDatePickerFormElement.html</Path>
    <Abstract>A date picker form element. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>datePickerElementWithID:labelText:date:datePickerMode:didChangeTarget:didChangeSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDatePickerFormElement</Scope>
    </TokenIdentifier>
    <Path>NIDatePickerFormElement.html</Path>
    <Anchor>datePickerElementWithID:labelText:date:datePickerMode:didChangeTarget:didChangeSelector:</Anchor>
    <Abstract>Initializes a date picker form element with callback method for value changed events. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>datePickerElementWithID:labelText:date:datePickerMode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDatePickerFormElement</Scope>
    </TokenIdentifier>
    <Path>NIDatePickerFormElement.html</Path>
    <Anchor>datePickerElementWithID:labelText:date:datePickerMode:</Anchor>
    <Abstract>Initializes a date picker form element with callback method for value changed events. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDatePickerFormElementCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIDatePickerFormElementCell</Scope>
    </TokenIdentifier>
    <Path>NIDatePickerFormElementCell.html</Path>
    <Abstract>The cell sibling to NIDatePickerFormElement. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDeviceInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Abstract>An interface for accessing device information. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfFreeMemory</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>bytesOfFreeMemory</Anchor>
    <Abstract>The number of bytes in memory that are free. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfTotalMemory</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>bytesOfTotalMemory</Anchor>
    <Abstract>The total number of bytes of memory. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simulateLowMemoryWarning</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>simulateLowMemoryWarning</Anchor>
    <Abstract>Simulate low memory warning. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfFreeDiskSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>bytesOfFreeDiskSpace</Anchor>
    <Abstract>The number of bytes free on disk. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfTotalDiskSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>bytesOfTotalDiskSpace</Anchor>
    <Abstract>The total number of bytes of disk space. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batteryLevel</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>batteryLevel</Anchor>
    <Abstract>The battery charge level in the range 0 . </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batteryState</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>batteryState</Anchor>
    <Abstract>The current battery state. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginCachedDeviceInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>beginCachedDeviceInfo</Anchor>
    <Abstract>Fetches the device&amp;#39;s current information and then caches it. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endCachedDeviceInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDeviceInfo</Scope>
    </TokenIdentifier>
    <Path>NIDeviceInfo.html</Path>
    <Anchor>endCachedDeviceInfo</Anchor>
    <Abstract>Stop using the cache for the device info methods. </Abstract>
    <DeclaredIn>NIDeviceInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDOM</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Abstract>A leight-weight DOM-like object to which you attach views and stylesheets. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>target</Anchor>
    <Abstract>Using the [UIView buildSubviews:inDOM:] extension allows you to build view hierarchies from JSON (or ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithStylesheet:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>initWithStylesheet:</Anchor>
    <Abstract>Initializes a newly allocated DOM with the given stylesheet. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>domWithStylesheet:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>domWithStylesheet:</Anchor>
    <Abstract>Returns an autoreleased DOM initialized with the given stylesheet. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>domWithStylesheetWithPathPrefix:paths:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>domWithStylesheetWithPathPrefix:paths:</Anchor>
    <Abstract>Returns an autoreleased DOM initialized with a nil-terminated list of file paths. ...</Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>domWithStylesheet:andParentStyles:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>domWithStylesheet:andParentStyles:</Anchor>
    <Abstract>Returns an autoreleased DOM initialized with the given stylesheet and a &amp;quot;parent&amp;quot; stylesheet that runs...</Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>registerView:</Anchor>
    <Abstract>Registers the given view with the DOM. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerView:withCSSClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>registerView:withCSSClass:</Anchor>
    <Abstract>Registers the given view with the DOM. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>unregisterView:</Anchor>
    <Abstract>Removes the given view from from the DOM. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterAllViews</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>unregisterAllViews</Anchor>
    <Abstract>Removes all views from from the DOM. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCssClass:toView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>addCssClass:toView:</Anchor>
    <Abstract>Create an association of a view with a CSS class and apply relevant styles immediately. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeCssClass:fromView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>removeCssClass:fromView:</Anchor>
    <Abstract>Removes the association of a view with a CSS class. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refresh</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>refresh</Anchor>
    <Abstract>Reapplies the stylesheet to all views. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refreshView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>refreshView:</Anchor>
    <Abstract>Reapplies the stylesheet to a single view. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descriptionForView:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>descriptionForView:withName:</Anchor>
    <Abstract>Describe what would be done to view given the existing registrations for it. </Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descriptionForAllViews</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIDOM</Scope>
    </TokenIdentifier>
    <Path>NIDOM.html</Path>
    <Anchor>descriptionForAllViews</Anchor>
    <Abstract>Call descriptionForView for all registered views, in the order they would be applied during refresh...</Abstract>
    <DeclaredIn>NIDOM.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDrawRectBlockCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIDrawRectBlockCell</Scope>
    </TokenIdentifier>
    <Path>NIDrawRectBlockCell.html</Path>
    <Abstract>A cell that renders its contents using a block. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDrawRectBlockCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIDrawRectBlockCellObject</Scope>
    </TokenIdentifier>
    <Path>NIDrawRectBlockCellObject.html</Path>
    <Abstract>An object that will draw the contents of the cell using a provided block. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICellObject</Scope>
    </TokenIdentifier>
    <Path>NICellObject.html</Path>
    <Anchor>userInfo</Anchor>
    <Abstract>An object that can be used to populate information in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIFormElement</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIFormElement</Scope>
    </TokenIdentifier>
    <Path>NIFormElement.html</Path>
    <Abstract>A single element of a form with an ID property. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIFormElementCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIFormElementCell</Scope>
    </TokenIdentifier>
    <Path>NIFormElementCell.html</Path>
    <Abstract>The base class for form element cells. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIGroupedCellAppearance</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIGroupedCellAppearance</Scope>
    </TokenIdentifier>
    <Path>NIGroupedCellAppearance-Protocol.html</Path>
    <Abstract>The NIGroupedCellAppearance protocol provides support for each cell to adjust their appearance...</Abstract>
    <DeclaredIn>NICellBackgrounds.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawsCellDivider</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIGroupedCellAppearance-p</Scope>
    </TokenIdentifier>
    <Path>NIGroupedCellAppearance-Protocol.html</Path>
    <Anchor>drawsCellDivider</Anchor>
    <Abstract>Determines whether or not to draw a divider between cells. </Abstract>
    <DeclaredIn>NICellBackgrounds.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIGroupedCellBackground</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIGroupedCellBackground</Scope>
    </TokenIdentifier>
    <Path>NIGroupedCellBackground.html</Path>
    <Abstract>The NIGroupedCellBackground class provides support for generating grouped UITableView cell background...</Abstract>
    <DeclaredIn>NICellBackgrounds.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageForFirst:last:highlighted:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIGroupedCellBackground</Scope>
    </TokenIdentifier>
    <Path>NIGroupedCellBackground.html</Path>
    <Anchor>imageForFirst:last:highlighted:</Anchor>
    <Abstract>Returns an image for use with the given cell configuration. </Abstract>
    <DeclaredIn>NICellBackgrounds.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIImageMemoryCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIImageMemoryCache.html</Path>
    <Abstract>An in-memory cache for storing images with caps on the total number of pixels. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPixels</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIImageMemoryCache.html</Path>
    <Anchor>numberOfPixels</Anchor>
    <Abstract>Returns the total number of pixels being stored in the cache. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumberOfPixels</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIImageMemoryCache.html</Path>
    <Anchor>maxNumberOfPixels</Anchor>
    <Abstract>The maximum number of pixels this cache may ever store. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumberOfPixelsUnderStress</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIImageMemoryCache.html</Path>
    <Anchor>maxNumberOfPixelsUnderStress</Anchor>
    <Abstract>The maximum number of pixels this cache may store after a call to reduceMemoryUsage. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithCapacity:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>initWithCapacity:</Anchor>
    <Abstract>Initializes a newly allocated cache with the given capacity. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>count</Anchor>
    <Abstract>Returns the number of objects currently in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>storeObject:withName:</Anchor>
    <Abstract>Stores an object in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:expiresAfter:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>storeObject:withName:expiresAfter:</Anchor>
    <Abstract>Stores an object in the cache with an expiration date. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>removeObjectWithName:</Anchor>
    <Abstract>Removes an object from the cache with the given name. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjectsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>removeAllObjectsWithPrefix:</Anchor>
    <Abstract>Removes all objects from the cache with a given prefix. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>removeAllObjects</Anchor>
    <Abstract>Removes all objects from the cache, regardless of expiration dates. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>objectWithName:</Anchor>
    <Abstract>Retrieves an object from the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>containsObjectWithName:</Anchor>
    <Abstract>Returns a Boolean value that indicates whether an object with the given name is present in the cache...</Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateOfLastAccessWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>dateOfLastAccessWithName:</Anchor>
    <Abstract>Returns the date that the object with the given name was last accessed. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameOfLeastRecentlyUsedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>nameOfLeastRecentlyUsedObject</Anchor>
    <Abstract>Retrieve the name of the object that was least recently used. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameOfMostRecentlyUsedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>nameOfMostRecentlyUsedObject</Anchor>
    <Abstract>Retrieve the key with the most fresh access. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduceMemoryUsage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>reduceMemoryUsage</Anchor>
    <Abstract>Removes all expired objects from the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSetObject:withName:previousObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>shouldSetObject:withName:previousObject:</Anchor>
    <Abstract>An object is about to be stored in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didSetObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>didSetObject:withName:</Anchor>
    <Abstract>An object has been stored in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRemoveObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>willRemoveObject:withName:</Anchor>
    <Abstract>An object is about to be removed from the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willSetObject:withName:previousObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>willSetObject:withName:previousObject:</Anchor>
    <Abstract>This method is deprecated. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIImageResponseSerializer</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIImageResponseSerializer</Scope>
    </TokenIdentifier>
    <Path>NIImageResponseSerializer.html</Path>
    <Abstract>The NIImageResponseSerializer class provides an implementation of the AFNetworking serializer object ...</Abstract>
    <DeclaredIn>NIImageResponseSerializer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIInspectionOverviewPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIInspectionOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIInspectionOverviewPageView.html</Path>
    <Abstract>A page that adds run-time inspection features. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIInterapp</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Abstract>An interface for interacting with other apps installed on the device. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safariWithURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>safariWithURL:</Anchor>
    <Abstract>Opens the given URL in Safari. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>googleChromeIsInstalled</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>googleChromeIsInstalled</Anchor>
    <Abstract>Returns YES if the Google Chrome application is installed. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>googleChromeAppStoreId</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>googleChromeAppStoreId</Anchor>
    <Abstract>The Google Chrome App Store ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>googleMapAtLocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>googleMapAtLocation:</Anchor>
    <Abstract>Opens Google Maps at the given location. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>googleMapAtLocation:title:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>googleMapAtLocation:title:</Anchor>
    <Abstract>Opens Google Maps at the given location with a title. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>googleMapDirectionsFromLocation:toLocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>googleMapDirectionsFromLocation:toLocation:</Anchor>
    <Abstract>Opens Google Maps with directions from one location to another. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>googleMapWithQuery:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>googleMapWithQuery:</Anchor>
    <Abstract>Opens Google Maps with a generic query. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phone</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>phone</Anchor>
    <Abstract>Opens the phone app. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>phoneWithNumber:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>phoneWithNumber:</Anchor>
    <Abstract>Make a phone call with the given number. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sms</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>sms</Anchor>
    <Abstract>Opens the phone app. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>smsWithNumber:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>smsWithNumber:</Anchor>
    <Abstract>Start texting the given number. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mailWithInvocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>mailWithInvocation:</Anchor>
    <Abstract>Opens mail with the given invocation properties. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>youTubeWithVideoId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>youTubeWithVideoId:</Anchor>
    <Abstract>Opens the YouTube video with the given video id. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appStoreWithAppId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>appStoreWithAppId:</Anchor>
    <Abstract>Opens the App Store page for the app with the given ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appStoreGiftWithAppId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>appStoreGiftWithAppId:</Anchor>
    <Abstract>Opens the &amp;quot;Gift this app&amp;quot; App Store page for the app with the given ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appStoreReviewWithAppId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>appStoreReviewWithAppId:</Anchor>
    <Abstract>Opens the &amp;quot;Write a review&amp;quot; App Store page for the app with the given ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iBooksIsInstalled</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>iBooksIsInstalled</Anchor>
    <Abstract>Returns YES if the iBooks application is installed. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iBooks</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>iBooks</Anchor>
    <Abstract>Opens the iBooks application. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iBooksAppStoreId</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>iBooksAppStoreId</Anchor>
    <Abstract>The iBooks App Store ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facebookIsInstalled</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>facebookIsInstalled</Anchor>
    <Abstract>Returns YES if the Facebook application is installed. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facebook</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>facebook</Anchor>
    <Abstract>Opens the Facebook application. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facebookProfileWithId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>facebookProfileWithId:</Anchor>
    <Abstract>Opens the Facebook profile with the given id. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facebookAppStoreId</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>facebookAppStoreId</Anchor>
    <Abstract>The Facebook App Store ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twitterIsInstalled</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>twitterIsInstalled</Anchor>
    <Abstract>Returns YES if the Twitter application is installed. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twitter</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>twitter</Anchor>
    <Abstract>Opens the Twitter application. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twitterWithMessage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>twitterWithMessage:</Anchor>
    <Abstract>Begins composing a message. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twitterProfileForUsername:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>twitterProfileForUsername:</Anchor>
    <Abstract>Opens the profile for the given username. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>twitterAppStoreId</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>twitterAppStoreId</Anchor>
    <Abstract>The Twitter App Store ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instagramIsInstalled</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>instagramIsInstalled</Anchor>
    <Abstract>Returns YES if the Instagram application is installed. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instagram</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>instagram</Anchor>
    <Abstract>Opens the Instagram application. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instagramCamera</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>instagramCamera</Anchor>
    <Abstract>Opens the Instagram camera. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instagramProfileForUsername:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>instagramProfileForUsername:</Anchor>
    <Abstract>Opens the profile for the given username. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>urlForInstagramImageAtFilePath:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>urlForInstagramImageAtFilePath:error:</Anchor>
    <Abstract>Copies an image to a temporary path suitable for use with a UIDocumentInteractionController in order ...</Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instagramAppStoreId</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>instagramAppStoreId</Anchor>
    <Abstract>The Instagram App Store ID. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationIsInstalledWithScheme:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>applicationIsInstalledWithScheme:</Anchor>
    <Abstract>Returns YES if the supplied application is installed. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationWithScheme:andAppStoreId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>applicationWithScheme:andAppStoreId:</Anchor>
    <Abstract>Opens the supplied application. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationWithScheme:andPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>applicationWithScheme:andPath:</Anchor>
    <Abstract>Opens the supplied application. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationWithScheme:appStoreId:andPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIInterapp</Scope>
    </TokenIdentifier>
    <Path>NIInterapp.html</Path>
    <Anchor>applicationWithScheme:appStoreId:andPath:</Anchor>
    <Abstract>Opens the supplied application, to the specified path. </Abstract>
    <DeclaredIn>NIInterapp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherButtonView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherButtonView</Scope>
    </TokenIdentifier>
    <Path>NILauncherButtonView.html</Path>
    <Abstract>A launcher button view that displays an image and and a label beneath it. </Abstract>
    <DeclaredIn>NILauncherButtonView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>The identifier used to categorize views into buckets for reuse. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>The identifier used to categorize views into buckets for reuse. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherButtonView</Scope>
    </TokenIdentifier>
    <Path>NILauncherButtonView.html</Path>
    <Anchor>button</Anchor>
    <Abstract>The button view that should be used to display the launcher icon. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherButtonView</Scope>
    </TokenIdentifier>
    <Path>NILauncherButtonView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>The label view that should show the title of the launcher item. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentInset</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherButtonView</Scope>
    </TokenIdentifier>
    <Path>NILauncherButtonView.html</Path>
    <Anchor>contentInset</Anchor>
    <Abstract>The distance that the button and label are inset from the enclosing view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateViewWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherViewObjectView-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObjectView-Protocol.html</Path>
    <Anchor>shouldUpdateViewWithObject:</Anchor>
    <Abstract>Informs the receiver that a new object should be used to configure the view. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherButtonView</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherButtonView</Scope>
    </TokenIdentifier>
    <Path>NILauncherButtonView-Protocol.html</Path>
    <Abstract>The launcher delegate used to inform of state changes and user interactions. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NILauncherButtonView-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherButtonView-Protocol.html</Path>
    <Anchor>button</Anchor>
    <Abstract>Requires the view to contain a button subview. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>The identifier used to categorize views into buckets for reuse. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherDataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherDataSource</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Abstract>The launcher data source used to populate the view. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:numberOfButtonsInPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>launcherView:numberOfButtonsInPage:</Anchor>
    <Abstract>Tells the receiver to return the number of rows in a given section of a table view (required)...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:buttonViewForPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>launcherView:buttonViewForPage:atIndex:</Anchor>
    <Abstract>Tells the receiver to return a button view for inserting into a particular location of a given page i...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfPagesInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of pages in the launcher view. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRowsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfRowsPerPageInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of rows of buttons each page can display in the launcher view...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfColumnsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfColumnsPerPageInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of columns of buttons each page can display in the launcher vi...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherDelegate</Scope>
    </TokenIdentifier>
    <Path>NILauncherDelegate-Protocol.html</Path>
    <Abstract>The launcher delegate used to inform of state changes and user interactions. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:didSelectItemOnPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDelegate-Protocol.html</Path>
    <Anchor>launcherView:didSelectItemOnPage:atIndex:</Anchor>
    <Abstract>Informs the receiver that the specified item on the specified page has been selected. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Abstract>A single page in a launcher view. </Abstract>
    <DeclaredIn>NILauncherPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>This view&amp;#39;s reuse identifier. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithReuseIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>initWithReuseIdentifier:</Anchor>
    <Abstract>Initializes a newly allocated view with the given reuse identifier. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageDidDisappear</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>pageDidDisappear</Anchor>
    <Abstract>Called after the page has gone off-screen. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameAndMaintainState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>setFrameAndMaintainState:</Anchor>
    <Abstract>Called when the frame of the page is going to change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewRecycler</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Anchor>viewRecycler</Anchor>
    <Abstract>A shared view recycler for this page&amp;#39;s recyclable views. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recyclableViews</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Anchor>recyclableViews</Anchor>
    <Abstract>All of the recyclable views that have been added to this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRecyclableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Anchor>addRecyclableView:</Anchor>
    <Abstract>Add a recyclable view to this page. </Abstract>
    <DeclaredIn>NILauncherPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentInset</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Anchor>contentInset</Anchor>
    <Abstract>The distance that the recyclable views are inset from the enclosing view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Anchor>viewSize</Anchor>
    <Abstract>The size of each recyclable view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewMargins</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherPageView</Scope>
    </TokenIdentifier>
    <Path>NILauncherPageView.html</Path>
    <Anchor>viewMargins</Anchor>
    <Abstract>The recommended horizontal and vertical distance between each recyclable view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Abstract>A launcher view that simulates iOS&amp;#39; home screen launcher functionality. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumberOfButtonsPerPage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>maxNumberOfButtonsPerPage</Anchor>
    <Abstract>The maximum number of buttons allowed on a given page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentInsetForPages</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>contentInsetForPages</Anchor>
    <Abstract>The distance that each page view insets its contents. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttonSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>buttonSize</Anchor>
    <Abstract>The size of each launcher button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRows</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>numberOfRows</Anchor>
    <Abstract>The number of rows to display on each page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfColumns</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>numberOfColumns</Anchor>
    <Abstract>The number of columns to display on each page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dequeueReusableViewWithIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>dequeueReusableViewWithIdentifier:</Anchor>
    <Abstract>Returns a reusable launcher button view object located by its identifier. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The object that acts as the delegate of the receiving launcher view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>dataSource</Anchor>
    <Abstract>The object that acts as the data source of the receiving table view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reloadData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>reloadData</Anchor>
    <Abstract>Reloads the pages of the receiver. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRotateToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>willRotateToInterfaceOrientation:duration:</Anchor>
    <Abstract>Stores the current state of the launcher view in preparation for rotation. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willAnimateRotationToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>NILauncherView.html</Path>
    <Anchor>willAnimateRotationToInterfaceOrientation:duration:</Anchor>
    <Abstract>Updates the frame of the launcher view while maintaining the current visible page&amp;#39;s state...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewController</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherViewController</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewController.html</Path>
    <Abstract>The NILauncherViewController class creates a controller object that manages a launcher view...</Abstract>
    <DeclaredIn>NILauncherViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherViewController</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewController.html</Path>
    <Anchor>launcherView</Anchor>
    <Abstract>Returns the launcher view managed by the controller object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:didSelectItemOnPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDelegate-Protocol.html</Path>
    <Anchor>launcherView:didSelectItemOnPage:atIndex:</Anchor>
    <Abstract>Informs the receiver that the specified item on the specified page has been selected. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:numberOfButtonsInPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>launcherView:numberOfButtonsInPage:</Anchor>
    <Abstract>Tells the receiver to return the number of rows in a given section of a table view (required)...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:buttonViewForPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>launcherView:buttonViewForPage:atIndex:</Anchor>
    <Abstract>Tells the receiver to return a button view for inserting into a particular location of a given page i...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfPagesInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of pages in the launcher view. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRowsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfRowsPerPageInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of rows of buttons each page can display in the launcher view...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfColumnsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfColumnsPerPageInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of columns of buttons each page can display in the launcher vi...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewModel</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherViewModel</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModel.html</Path>
    <Abstract>A launcher view model that complies to the NILauncherDataSource protocol. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithArrayOfPages:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherViewModel</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModel.html</Path>
    <Anchor>initWithArrayOfPages:delegate:</Anchor>
    <Abstract>Initializes a newly allocated launcher view model with an array of pages and a given delegate...</Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherViewModel</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModel.html</Path>
    <Anchor>appendPage:</Anchor>
    <Abstract>Appends a page of launcher view objects. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendObject:toPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherViewModel</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModel.html</Path>
    <Anchor>appendObject:toPage:</Anchor>
    <Abstract>Appends a launcher view object to a given page. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtIndex:pageIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherViewModel</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModel.html</Path>
    <Anchor>objectAtIndex:pageIndex:</Anchor>
    <Abstract>Returns the object at the given index in the page at the given page index. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:numberOfButtonsInPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>launcherView:numberOfButtonsInPage:</Anchor>
    <Abstract>Tells the receiver to return the number of rows in a given section of a table view (required)...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:buttonViewForPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>launcherView:buttonViewForPage:atIndex:</Anchor>
    <Abstract>Tells the receiver to return a button view for inserting into a particular location of a given page i...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfPagesInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of pages in the launcher view. </Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRowsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfRowsPerPageInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of rows of buttons each page can display in the launcher view...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfColumnsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherDataSource-Protocol.html</Path>
    <Anchor>numberOfColumnsPerPageInLauncherView:</Anchor>
    <Abstract>Asks the receiver to return the number of columns of buttons each page can display in the launcher vi...</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewModelDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherViewModelDelegate</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModelDelegate-Protocol.html</Path>
    <Abstract>The delegate for NILauncherViewModel. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherViewModel:configureButtonView:forLauncherView:pageIndex:buttonIndex:object:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewModelDelegate-Protocol.html</Path>
    <Anchor>launcherViewModel:configureButtonView:forLauncherView:pageIndex:buttonIndex:object:</Anchor>
    <Abstract>Tells the delegate to configure a button view in a given page. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherViewObject</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject.html</Path>
    <Abstract>An implementation of the NILauncherViewObject protocol. </Abstract>
    <DeclaredIn>NILauncherViewObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:image:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherViewObject</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject.html</Path>
    <Anchor>initWithTitle:image:</Anchor>
    <Abstract>Initializes a newly allocated launcher view object with a given title and image. </Abstract>
    <DeclaredIn>NILauncherViewObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithTitle:image:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NILauncherViewObject</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject.html</Path>
    <Anchor>objectWithTitle:image:</Anchor>
    <Abstract>Allocates and returns an autoreleased instance of a launcher view object. </Abstract>
    <DeclaredIn>NILauncherViewObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>title</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NILauncherViewObject-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Anchor>title</Anchor>
    <Abstract>The title that will be displayed on the launcher view button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>image</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NILauncherViewObject-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Anchor>image</Anchor>
    <Abstract>The image that will be displayed on the launcher view button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttonViewClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherViewObject-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Anchor>buttonViewClass</Anchor>
    <Abstract>The class of button view that should be used to display this object. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherViewObject</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Abstract>The minimal amount of information required to configure a button view. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>title</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NILauncherViewObject-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Anchor>title</Anchor>
    <Abstract>The title that will be displayed on the launcher view button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>image</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NILauncherViewObject-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Anchor>image</Anchor>
    <Abstract>The image that will be displayed on the launcher view button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttonViewClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherViewObject-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObject-Protocol.html</Path>
    <Anchor>buttonViewClass</Anchor>
    <Abstract>The class of button view that should be used to display this object. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewObjectView</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherViewObjectView</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObjectView-Protocol.html</Path>
    <Abstract>A protocol that a launcher button view can implement to allow itself to be configured. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateViewWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherViewObjectView-p</Scope>
    </TokenIdentifier>
    <Path>NILauncherViewObjectView-Protocol.html</Path>
    <Anchor>shouldUpdateViewWithObject:</Anchor>
    <Abstract>Informs the receiver that a new object should be used to configure the view. </Abstract>
    <DeclaredIn>NILauncherViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILinkedList</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Abstract>A singly linked list implementation. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>count</Anchor>
    <Abstract>Returns the number of objects currently in the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>firstObject</Anchor>
    <Abstract>Returns the first object in the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>lastObject</Anchor>
    <Abstract>Returns the last object in the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>allObjects</Anchor>
    <Abstract>Returns an array containing the linked list&amp;#39;s objects, or an empty array if the linked list has no ob...</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectEnumerator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>objectEnumerator</Anchor>
    <Abstract>Returns an enumerator object that lets you access each object in the linked list. ...</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>containsObject:</Anchor>
    <Abstract>Returns a Boolean value that indicates whether a given object is present in the linked list...</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>description</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>description</Anchor>
    <Abstract>Returns a string that represents the contents of the linked list, formatted as a property list...</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkedList</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>linkedList</Anchor>
    <Abstract>Returns a newly allocated and autoreleased linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkedListWithArray:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>linkedListWithArray:</Anchor>
    <Abstract>Returns a newly allocated and autoreleased linked list filled with the objects from an array...</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithArray:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>initWithArray:</Anchor>
    <Abstract>Initializes a newly allocated linked list by placing in it the objects contained in a given array...</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locationOfObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>locationOfObject:</Anchor>
    <Abstract>Searches for an object in the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtLocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>objectAtLocation:</Anchor>
    <Abstract>Retrieves the object at a specific location. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectAtLocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>removeObjectAtLocation:</Anchor>
    <Abstract>Removes an object at a predetermined location. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>addObject:</Anchor>
    <Abstract>Appends an object to the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObjectsFromArray:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>addObjectsFromArray:</Anchor>
    <Abstract>Appends an array of objects to the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>removeAllObjects</Anchor>
    <Abstract>Removes all objects from the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>removeObject:</Anchor>
    <Abstract>Removes an object from the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFirstObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>removeFirstObject</Anchor>
    <Abstract>Removes the first object from the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLastObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>NILinkedList.html</Path>
    <Anchor>removeLastObject</Anchor>
    <Abstract>Removes the last object from the linked list. </Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageMemoryCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>Nimbus.html</Path>
    <Anchor>imageMemoryCache</Anchor>
    <Abstract>Access the global image memory cache. </Abstract>
    <DeclaredIn>NIState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkOperationQueue</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>Nimbus.html</Path>
    <Anchor>networkOperationQueue</Anchor>
    <Abstract>Access the global network operation queue. </Abstract>
    <DeclaredIn>NIState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImageMemoryCache:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>Nimbus.html</Path>
    <Anchor>setImageMemoryCache:</Anchor>
    <Abstract>Set the global image memory cache. </Abstract>
    <DeclaredIn>NIState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNetworkOperationQueue:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>Nimbus.html</Path>
    <Anchor>setNetworkOperationQueue:</Anchor>
    <Abstract>Set the global network operation queue. </Abstract>
    <DeclaredIn>NIState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMemoryCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Abstract>An in-memory cache for storing objects with expiration support. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithCapacity:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>initWithCapacity:</Anchor>
    <Abstract>Initializes a newly allocated cache with the given capacity. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>count</Anchor>
    <Abstract>Returns the number of objects currently in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>storeObject:withName:</Anchor>
    <Abstract>Stores an object in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:expiresAfter:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>storeObject:withName:expiresAfter:</Anchor>
    <Abstract>Stores an object in the cache with an expiration date. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>removeObjectWithName:</Anchor>
    <Abstract>Removes an object from the cache with the given name. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjectsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>removeAllObjectsWithPrefix:</Anchor>
    <Abstract>Removes all objects from the cache with a given prefix. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>removeAllObjects</Anchor>
    <Abstract>Removes all objects from the cache, regardless of expiration dates. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>objectWithName:</Anchor>
    <Abstract>Retrieves an object from the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>containsObjectWithName:</Anchor>
    <Abstract>Returns a Boolean value that indicates whether an object with the given name is present in the cache...</Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateOfLastAccessWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>dateOfLastAccessWithName:</Anchor>
    <Abstract>Returns the date that the object with the given name was last accessed. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameOfLeastRecentlyUsedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>nameOfLeastRecentlyUsedObject</Anchor>
    <Abstract>Retrieve the name of the object that was least recently used. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameOfMostRecentlyUsedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>nameOfMostRecentlyUsedObject</Anchor>
    <Abstract>Retrieve the key with the most fresh access. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduceMemoryUsage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>reduceMemoryUsage</Anchor>
    <Abstract>Removes all expired objects from the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSetObject:withName:previousObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>shouldSetObject:withName:previousObject:</Anchor>
    <Abstract>An object is about to be stored in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didSetObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>didSetObject:withName:</Anchor>
    <Abstract>An object has been stored in the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRemoveObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>willRemoveObject:withName:</Anchor>
    <Abstract>An object is about to be removed from the cache. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willSetObject:withName:previousObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>NIMemoryCache.html</Path>
    <Anchor>willSetObject:withName:previousObject:</Anchor>
    <Abstract>This method is deprecated. </Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMutableCollectionViewModel</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Abstract>The NIMutableCollectionViewModel class is a mutable collection view model. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>addObject:</Anchor>
    <Abstract>Appends an object to the last section. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject:toSection:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>addObject:toSection:</Anchor>
    <Abstract>Appends an object to the end of the given section. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObjectsFromArray:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>addObjectsFromArray:</Anchor>
    <Abstract>Appends an array of objects to the last section. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertObject:atRow:inSection:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>insertObject:atRow:inSection:</Anchor>
    <Abstract>Inserts an object into the given section at the given row. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>removeObjectAtIndexPath:</Anchor>
    <Abstract>Removes an object at the given index path. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSectionWithTitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>addSectionWithTitle:</Anchor>
    <Abstract>Appends a section with a given title to the model. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertSectionWithTitle:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>insertSectionWithTitle:atIndex:</Anchor>
    <Abstract>Inserts a section with a given title to the model at the given index. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSectionAtIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableCollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableCollectionViewModel.html</Path>
    <Anchor>removeSectionAtIndex:</Anchor>
    <Abstract>Removes a section at the given index. </Abstract>
    <DeclaredIn>NIMutableCollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>A delegate used to fetch collection view cells for the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>initWithDelegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the given delegate and empty contents. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithListArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>initWithListArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a list array. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithSectionedArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>initWithSectionedArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a sectioned array. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>objectAtIndexPath:</Anchor>
    <Abstract>Returns the object at the given index path. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexPathForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NICollectionViewModel</Scope>
    </TokenIdentifier>
    <Path>NICollectionViewModel.html</Path>
    <Anchor>indexPathForObject:</Anchor>
    <Abstract>Returns the index path of the given object within the model. </Abstract>
    <DeclaredIn>NICollectionViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMutableTableViewModel</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Abstract>The NIMutableTableViewModel class is a mutable table view model. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>addObject:</Anchor>
    <Abstract>Appends an object to the last section. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject:toSection:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>addObject:toSection:</Anchor>
    <Abstract>Appends an object to the end of the given section. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObjectsFromArray:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>addObjectsFromArray:</Anchor>
    <Abstract>Appends an array of objects to the last section. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertObject:atRow:inSection:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>insertObject:atRow:inSection:</Anchor>
    <Abstract>Inserts an object into the given section at the given row. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>removeObjectAtIndexPath:</Anchor>
    <Abstract>Removes an object at the given index path. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSectionWithTitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>addSectionWithTitle:</Anchor>
    <Abstract>Appends a section with a given title to the model. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertSectionWithTitle:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>insertSectionWithTitle:atIndex:</Anchor>
    <Abstract>Inserts a section with a given title to the model at the given index. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSectionAtIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>removeSectionAtIndex:</Anchor>
    <Abstract>Removes a section at the given index. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSectionIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMutableTableViewModel</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModel.html</Path>
    <Anchor>updateSectionIndex</Anchor>
    <Abstract>Updates the section index with the current section index settings. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionIndexType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>sectionIndexType</Anchor>
    <Abstract>The section index type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionIndexShowsSearch</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>sectionIndexShowsSearch</Anchor>
    <Abstract>Whether or not the search symbol will be shown in the section index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionIndexShowsSummary</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>sectionIndexShowsSummary</Anchor>
    <Abstract>Whether or not the summary symbol will be shown in the section index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSectionIndexType:showsSearch:showsSummary:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>setSectionIndexType:showsSearch:showsSummary:</Anchor>
    <Abstract>Configures the model&amp;#39;s section index properties. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCellBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>createCellBlock</Anchor>
    <Abstract>A block used to create a UITableViewCell for a given object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>initWithDelegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the given delegate and empty contents. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithListArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>initWithListArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a list array. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithSectionedArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>initWithSectionedArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a sectioned array. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>objectAtIndexPath:</Anchor>
    <Abstract>Returns the object at the given index path. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexPathForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>indexPathForObject:</Anchor>
    <Abstract>Returns the index path of the given object within the model. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMutableTableViewModelDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIMutableTableViewModelDelegate</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModelDelegate-Protocol.html</Path>
    <Abstract>A protocol for NIMutableTableViewModel to handle editing states for objects. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:canEditObject:atIndexPath:inTableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIMutableTableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:canEditObject:atIndexPath:inTableView:</Anchor>
    <Abstract>Asks the receiver whether the object at the given index path should be editable. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:canMoveObject:atIndexPath:inTableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIMutableTableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:canMoveObject:atIndexPath:inTableView:</Anchor>
    <Abstract>Asks the receiver whether the object at the given index path should be moveable. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:shouldMoveObject:atIndexPath:toIndexPath:inTableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIMutableTableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:shouldMoveObject:atIndexPath:toIndexPath:inTableView:</Anchor>
    <Abstract>Asks the receiver whether the given object should be moved. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:deleteRowAnimationForObject:atIndexPath:inTableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIMutableTableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:deleteRowAnimationForObject:atIndexPath:inTableView:</Anchor>
    <Abstract>Asks the receiver what animation should be used when deleting the object at the given index path...</Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:shouldDeleteObject:atIndexPath:inTableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIMutableTableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIMutableTableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:shouldDeleteObject:atIndexPath:inTableView:</Anchor>
    <Abstract>Asks the receiver whether the given object should be deleted. </Abstract>
    <DeclaredIn>NIMutableTableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:cellForTableView:atIndexPath:withObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NITableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NITableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:cellForTableView:atIndexPath:withObject:</Anchor>
    <Abstract>Fetches a table view cell at a given index path with a given object. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINavigationAppearance</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NINavigationAppearance</Scope>
    </TokenIdentifier>
    <Path>NINavigationAppearance.html</Path>
    <Abstract>The NINavigationAppearance provides support for saving and restoring the navigation appearance state...</Abstract>
    <DeclaredIn>NINavigationAppearance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushAppearanceForNavigationController:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NINavigationAppearance</Scope>
    </TokenIdentifier>
    <Path>NINavigationAppearance.html</Path>
    <Anchor>pushAppearanceForNavigationController:</Anchor>
    <Abstract>Take a snapshot of the current navigation appearance. </Abstract>
    <DeclaredIn>NINavigationAppearance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popAppearanceForNavigationController:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NINavigationAppearance</Scope>
    </TokenIdentifier>
    <Path>NINavigationAppearance.html</Path>
    <Anchor>popAppearanceForNavigationController:animated:</Anchor>
    <Abstract>Restore the last navigation appearance snapshot. </Abstract>
    <DeclaredIn>NINavigationAppearance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NINavigationAppearance</Scope>
    </TokenIdentifier>
    <Path>NINavigationAppearance.html</Path>
    <Anchor>count</Anchor>
    <Abstract>Returns the number of items in the appearance stack. </Abstract>
    <DeclaredIn>NINavigationAppearance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NINavigationAppearance</Scope>
    </TokenIdentifier>
    <Path>NINavigationAppearance.html</Path>
    <Anchor>clear</Anchor>
    <Abstract>Remove all navigation appearance snapshots from the stack. </Abstract>
    <DeclaredIn>NINavigationAppearance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkImageOperation</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NINetworkImageOperation</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageOperation-Protocol.html</Path>
    <Abstract>A protocol defining the set of characteristics for an operation to be used with NINetworkImageView. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkImageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Abstract>A network-enabled image view that consumes minimal amounts of memory. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>initialImage</Anchor>
    <Abstract>The image being displayed while the network image is being fetched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeForDisplay</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>sizeForDisplay</Anchor>
    <Abstract>A flag for enabling the resizing of images for display. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleOptions</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>scaleOptions</Anchor>
    <Abstract>Options for modifying the way images are cropped when scaling. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interpolationQuality</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>interpolationQuality</Anchor>
    <Abstract>The interpolation quality to use when resizing the image. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageMemoryCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>imageMemoryCache</Anchor>
    <Abstract>The image memory cache used by this image view to store the image in memory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkOperationQueue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>networkOperationQueue</Anchor>
    <Abstract>The network operation queue used by this image view to load the image from network and disk...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAge</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>maxAge</Anchor>
    <Abstract>The maximum amount of time that an image will stay in memory after the request completes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>Delegate for state change notifications. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>initWithImage:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>setPathToNetworkImage:</Anchor>
    <Abstract>Load an image from the network using the current frame as the display size. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:forDisplaySize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>setPathToNetworkImage:forDisplaySize:</Anchor>
    <Abstract>Load an image from the network with a specific display size. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:forDisplaySize:contentMode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>setPathToNetworkImage:forDisplaySize:contentMode:</Anchor>
    <Abstract>Load an image from the network with a specific display size. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:forDisplaySize:contentMode:cropRect:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>setPathToNetworkImage:forDisplaySize:contentMode:cropRect:</Anchor>
    <Abstract>Load an image from the network with a specific display size and crop rect. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:cropRect:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>setPathToNetworkImage:cropRect:</Anchor>
    <Abstract>Load an image from the network with a crop rect and the current frame as the display size...</Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:contentMode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>setPathToNetworkImage:contentMode:</Anchor>
    <Abstract>Load an image from the network with a specific display size. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Kill any network requests and replace the displayed image with the initial image. ...</Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidStartLoading</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>networkImageViewDidStartLoading</Anchor>
    <Abstract>A network request has begun. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidLoadImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>networkImageViewDidLoadImage:</Anchor>
    <Abstract>The image has been loaded, either from the network or in-memory. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidFailWithError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageView.html</Path>
    <Anchor>networkImageViewDidFailWithError:</Anchor>
    <Abstract>A network request failed to load. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidStart:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidStart:</Anchor>
    <Abstract>The operation has started executing. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationWillFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationWillFinish:</Anchor>
    <Abstract>The operation is about to complete successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidFinish:</Anchor>
    <Abstract>The operation has completed successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidFail:withError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidFail:withError:</Anchor>
    <Abstract>The operation failed in some way and has completed. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkImageViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NINetworkImageViewDelegate</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageViewDelegate-Protocol.html</Path>
    <Abstract>The image view delegate used to inform of state changes. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidStartLoad:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageViewDelegate-Protocol.html</Path>
    <Anchor>networkImageViewDidStartLoad:</Anchor>
    <Abstract>The image has begun an asynchronous download of the image. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageView:didLoadImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageViewDelegate-Protocol.html</Path>
    <Anchor>networkImageView:didLoadImage:</Anchor>
    <Abstract>The image has completed an asynchronous download of the image. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageView:didFailWithError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageViewDelegate-Protocol.html</Path>
    <Anchor>networkImageView:didFailWithError:</Anchor>
    <Abstract>The asynchronous download failed. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageView:readBytes:totalBytes:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NINetworkImageViewDelegate-Protocol.html</Path>
    <Anchor>networkImageView:readBytes:totalBytes:</Anchor>
    <Abstract>The progress of the download. </Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkTableViewController</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NINetworkTableViewController</Scope>
    </TokenIdentifier>
    <Path>NINetworkTableViewController.html</Path>
    <Abstract>The NINetworkTableViewController class provides a similar implementation to UITableViewController but...</Abstract>
    <DeclaredIn>NINetworkTableViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsLoading:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkTableViewController</Scope>
    </TokenIdentifier>
    <Path>NINetworkTableViewController.html</Path>
    <Anchor>setIsLoading:</Anchor>
    <Abstract>Sets the loading state of the view controller. </Abstract>
    <DeclaredIn>NINetworkTableViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINibCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NINibCellObject</Scope>
    </TokenIdentifier>
    <Path>NINibCellObject-Protocol.html</Path>
    <Abstract>The protocol for an object that can be used in the NICellFactory with Interface Builder nibs...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellNib</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINibCellObject-p</Scope>
    </TokenIdentifier>
    <Path>NINibCellObject-Protocol.html</Path>
    <Anchor>cellNib</Anchor>
    <Abstract>A nib that contains a table view cell to display this object&amp;#39;s contents. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOperation</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Abstract>A base implementation of an NSOperation that supports traditional delegation and blocks. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate through which changes are notified for this operation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastError</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>lastError</Anchor>
    <Abstract>The error last passed to the didFailWithError notification. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tag</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>tag</Anchor>
    <Abstract>A simple tagging mechanism for identifying operations. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didStartBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>didStartBlock</Anchor>
    <Abstract>The operation has started executing. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFinishBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>didFinishBlock</Anchor>
    <Abstract>The operation has completed successfully. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFailWithErrorBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>didFailWithErrorBlock</Anchor>
    <Abstract>The operation failed in some way and has completed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willFinishBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>willFinishBlock</Anchor>
    <Abstract>The operation is about to complete successfully. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didStart</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>didStart</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has begun. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>didFinish</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has finished. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFailWithError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>didFailWithError:</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has failed. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>NIOperation.html</Path>
    <Anchor>willFinish</Anchor>
    <Abstract>In the operation&amp;#39;s thread, notify the delegate that the operation will finish successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOperationDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIOperationDelegate</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Abstract>The delegate protocol for an NIOperation. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidStart:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidStart:</Anchor>
    <Abstract>The operation has started executing. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationWillFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationWillFinish:</Anchor>
    <Abstract>The operation is about to complete successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidFinish:</Anchor>
    <Abstract>The operation has completed successfully. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbusOperationDidFail:withError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIOperationDelegate-Protocol.html</Path>
    <Anchor>nimbusOperationDidFail:withError:</Anchor>
    <Abstract>The operation failed in some way and has completed. </Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverview</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Abstract>The Overview state management class. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationDidFinishLaunching</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>applicationDidFinishLaunching</Anchor>
    <Abstract>Call this immediately in application:didFinishLaunchingWithOptions:. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applicationDidFinishLaunchingWithStatusBarHeightOverride:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>applicationDidFinishLaunchingWithStatusBarHeightOverride:</Anchor>
    <Abstract>Call this immediately in application:didFinishLaunchingWithOptions:. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOverviewToWindow:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>addOverviewToWindow:</Anchor>
    <Abstract>Adds the Overview to the given window. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addOverviewToWindow:enableDraggingVertically:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>addOverviewToWindow:enableDraggingVertically:</Anchor>
    <Abstract>Adds the Overview to the given window. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>height</Anchor>
    <Abstract>The height of the Overview. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frame</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>frame</Anchor>
    <Abstract>The frame of the Overview. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>view</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>view</Anchor>
    <Abstract>The Overview view. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logger</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverview</Scope>
    </TokenIdentifier>
    <Path>NIOverview.html</Path>
    <Anchor>logger</Anchor>
    <Abstract>The Overview logger. </Abstract>
    <DeclaredIn>NIOverview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewConsoleLogEntry</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewConsoleLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewConsoleLogEntry.html</Path>
    <Abstract>A console log entry. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewConsoleLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewConsoleLogEntry.html</Path>
    <Anchor>log</Anchor>
    <Abstract>The text that was written to the console log. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithLog:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewConsoleLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewConsoleLogEntry.html</Path>
    <Anchor>initWithLog:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timestamp</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>timestamp</Anchor>
    <Abstract>The timestamp for this log entry. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTimestamp:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>initWithTimestamp:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewConsoleLogPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewConsoleLogPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewConsoleLogPageView.html</Path>
    <Abstract>A page that shows all of the logs sent to the console. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewDeviceLogEntry</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Abstract>A device log entry. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfFreeMemory</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Anchor>bytesOfFreeMemory</Anchor>
    <Abstract>The number of bytes of free memory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfTotalMemory</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Anchor>bytesOfTotalMemory</Anchor>
    <Abstract>The number of bytes of total memory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfFreeDiskSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Anchor>bytesOfFreeDiskSpace</Anchor>
    <Abstract>The number of bytes of free disk space. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bytesOfTotalDiskSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Anchor>bytesOfTotalDiskSpace</Anchor>
    <Abstract>The number of bytes of total disk space. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batteryLevel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Anchor>batteryLevel</Anchor>
    <Abstract>The battery level. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>batteryState</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewDeviceLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDeviceLogEntry.html</Path>
    <Anchor>batteryState</Anchor>
    <Abstract>The state of the battery. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timestamp</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>timestamp</Anchor>
    <Abstract>The timestamp for this log entry. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTimestamp:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>initWithTimestamp:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewDiskPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewDiskPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewDiskPageView.html</Path>
    <Abstract>A page that renders a graph showing free disk space. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewXRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewXRange:</Anchor>
    <Abstract>Fetches the total range of all x values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewYRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewYRange:</Anchor>
    <Abstract>Fetches the total range of all y values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPointIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetPointIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching points in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPointInGraphView:point:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextPointInGraphView:point:</Anchor>
    <Abstract>Fetches the next point in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetEventIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetEventIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching events in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEventInGraphView:xValue:color:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextEventInGraphView:xValue:color:</Anchor>
    <Abstract>Fetches the next event in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewEventLogEntry</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewEventLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewEventLogEntry.html</Path>
    <Abstract>An event log entry. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewEventLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewEventLogEntry.html</Path>
    <Anchor>type</Anchor>
    <Abstract>The type of event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewEventLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewEventLogEntry.html</Path>
    <Anchor>initWithType:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timestamp</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>timestamp</Anchor>
    <Abstract>The timestamp for this log entry. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTimestamp:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>initWithTimestamp:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewGraphPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewGraphPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphPageView.html</Path>
    <Abstract>A page that renders a graph and two labels. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewXRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewXRange:</Anchor>
    <Abstract>Fetches the total range of all x values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewYRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewYRange:</Anchor>
    <Abstract>Fetches the total range of all y values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPointIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetPointIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching points in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPointInGraphView:point:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextPointInGraphView:point:</Anchor>
    <Abstract>Fetches the next point in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetEventIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetEventIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching events in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEventInGraphView:xValue:color:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextEventInGraphView:xValue:color:</Anchor>
    <Abstract>Fetches the next event in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewGraphView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewGraphView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphView.html</Path>
    <Abstract>A graph view. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewGraphView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphView.html</Path>
    <Anchor>dataSource</Anchor>
    <Abstract>The data source for this graph view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewGraphViewDataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIOverviewGraphViewDataSource</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Abstract>The data source for NIOverviewGraphView. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewXRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewXRange:</Anchor>
    <Abstract>Fetches the total range of all x values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewYRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewYRange:</Anchor>
    <Abstract>Fetches the total range of all y values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPointIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetPointIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching points in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPointInGraphView:point:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextPointInGraphView:point:</Anchor>
    <Abstract>Fetches the next point in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetEventIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetEventIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching events in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEventInGraphView:xValue:color:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextEventInGraphView:xValue:color:</Anchor>
    <Abstract>Fetches the next event in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewLogEntry</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Abstract>The basic requirements for a log entry. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timestamp</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>timestamp</Anchor>
    <Abstract>The timestamp for this log entry. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTimestamp:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogEntry</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogEntry.html</Path>
    <Anchor>initWithTimestamp:</Anchor>
    <Abstract>Designated initializer. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewLogger</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Abstract>The Overview logger. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oldestLogAge</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>oldestLogAge</Anchor>
    <Abstract>The oldest age of a memory or disk log entry. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deviceLogs</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>deviceLogs</Anchor>
    <Abstract>The linked list of device logs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consoleLogs</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>consoleLogs</Anchor>
    <Abstract>The linked list of console logs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eventLogs</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>eventLogs</Anchor>
    <Abstract>The linked list of events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDeviceLog:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>addDeviceLog:</Anchor>
    <Abstract>Add a device log. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConsoleLog:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>addConsoleLog:</Anchor>
    <Abstract>Add a console log. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addEventLog:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewLogger</Scope>
    </TokenIdentifier>
    <Path>NIOverviewLogger.html</Path>
    <Anchor>addEventLog:</Anchor>
    <Abstract>Add a event log. </Abstract>
    <DeclaredIn>NIOverviewLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewMaxLogLevelPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewMaxLogLevelPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewMaxLogLevelPageView.html</Path>
    <Abstract>A page that allows you to modify NIMaxLogLevel. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewMemoryCacheController</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewMemoryCacheController</Scope>
    </TokenIdentifier>
    <Path>NIOverviewMemoryCacheController.html</Path>
    <Abstract>A view controller that displays the contents of an in-memory cache. </Abstract>
    <DeclaredIn>NIOverviewMemoryCacheController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewMemoryCachePageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewMemoryCachePageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewMemoryCachePageView.html</Path>
    <Abstract>A page that shows information regarding an in-memory cache. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageWithCache:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewMemoryCachePageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewMemoryCachePageView.html</Path>
    <Anchor>pageWithCache:</Anchor>
    <Abstract>Returns an autoreleased instance of this page with the given cache. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewXRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewXRange:</Anchor>
    <Abstract>Fetches the total range of all x values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewYRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewYRange:</Anchor>
    <Abstract>Fetches the total range of all y values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPointIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetPointIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching points in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPointInGraphView:point:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextPointInGraphView:point:</Anchor>
    <Abstract>Fetches the next point in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetEventIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetEventIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching events in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEventInGraphView:xValue:color:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextEventInGraphView:xValue:color:</Anchor>
    <Abstract>Fetches the next event in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewMemoryPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewMemoryPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewMemoryPageView.html</Path>
    <Abstract>A page that renders a graph showing free memory. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewXRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewXRange:</Anchor>
    <Abstract>Fetches the total range of all x values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>graphViewYRange:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>graphViewYRange:</Anchor>
    <Abstract>Fetches the total range of all y values for this graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPointIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetPointIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching points in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPointInGraphView:point:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextPointInGraphView:point:</Anchor>
    <Abstract>Fetches the next point in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetEventIterator</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>resetEventIterator</Anchor>
    <Abstract>The data source should reset its iterator for fetching events in the graph. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextEventInGraphView:xValue:color:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOverviewGraphViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIOverviewGraphViewDataSource-Protocol.html</Path>
    <Anchor>nextEventInGraphView:xValue:color:</Anchor>
    <Abstract>Fetches the next event in the graph to plot. </Abstract>
    <DeclaredIn>NIOverviewGraphView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Abstract>A page in the Overview. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>pageTitle</Anchor>
    <Abstract>The title of the page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleLabel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>titleLabel</Anchor>
    <Abstract>The title label for this page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>label</Anchor>
    <Abstract>Creates a generic label for use in the page. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>page</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>page</Anchor>
    <Abstract>Returns an autoreleased instance of this view. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewPageView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewPageView.html</Path>
    <Anchor>update</Anchor>
    <Abstract>Request that this page update its information. </Abstract>
    <DeclaredIn>NIOverviewPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOverviewView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Abstract>The root scrolling page view of the Overview. </Abstract>
    <DeclaredIn>NIOverviewView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translucent</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Anchor>translucent</Anchor>
    <Abstract>Whether the view has a translucent background or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableDraggingVertically</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Anchor>enableDraggingVertically</Anchor>
    <Abstract>Whether the view can be draggable vertically or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prependPageView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Anchor>prependPageView:</Anchor>
    <Abstract>Prepends a new page to the Overview. </Abstract>
    <DeclaredIn>NIOverviewView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPageView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Anchor>addPageView:</Anchor>
    <Abstract>Adds a new page to the Overview. </Abstract>
    <DeclaredIn>NIOverviewView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removePageView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Anchor>removePageView:</Anchor>
    <Abstract>Removes a page from the Overview. </Abstract>
    <DeclaredIn>NIOverviewView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePages</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOverviewView</Scope>
    </TokenIdentifier>
    <Path>NIOverviewView.html</Path>
    <Anchor>updatePages</Anchor>
    <Abstract>Update all of the views. </Abstract>
    <DeclaredIn>NIOverviewView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIPageView</Scope>
    </TokenIdentifier>
    <Path>NIPageView.html</Path>
    <Abstract>Use NIPagingScrollViewPage instead. </Abstract>
    <DeclaredIn>NIPageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>This view&amp;#39;s reuse identifier. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithReuseIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>initWithReuseIdentifier:</Anchor>
    <Abstract>Initializes a newly allocated view with the given reuse identifier. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageDidDisappear</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>pageDidDisappear</Anchor>
    <Abstract>Called after the page has gone off-screen. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameAndMaintainState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>setFrameAndMaintainState:</Anchor>
    <Abstract>Called when the frame of the page is going to change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPagingScrollView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Abstract>The NIPagingScrollView class provides a UITableView-like interface for loading pages via a data sourc...</Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>dataSource</Anchor>
    <Abstract>The data source for this page album view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate for this paging view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reloadData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>reloadData</Anchor>
    <Abstract>Force the view to reload its data by asking the data source for information. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dequeueReusablePageWithIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>dequeueReusablePageWithIdentifier:</Anchor>
    <Abstract>Dequeues a reusable page from the set of recycled pages. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPageIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>centerPageIndex</Anchor>
    <Abstract>The current center page index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPages</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>numberOfPages</Anchor>
    <Abstract>The total number of pages in this paging view, as gathered from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>centerPageView</Anchor>
    <Abstract>The current center page view. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageMargin</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>pageMargin</Anchor>
    <Abstract>The number of pixels on either side of each page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>type</Anchor>
    <Abstract>The type of paging scroll view to display. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNext</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>hasNext</Anchor>
    <Abstract>Returns YES if there is a next page. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPrevious</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>hasPrevious</Anchor>
    <Abstract>Returns YES if there is a previous page. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToNextAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToNextAnimated:</Anchor>
    <Abstract>Move to the next page if there is one. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPreviousAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToPreviousAnimated:</Anchor>
    <Abstract>Move to the previous page if there is one. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPageAtIndex:animated:updateVisiblePagesWhileScrolling:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToPageAtIndex:animated:updateVisiblePagesWhileScrolling:</Anchor>
    <Abstract>Move to the given page index with optional animation and option to enable page updates while scrollin...</Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPageAtIndex:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToPageAtIndex:animated:</Anchor>
    <Abstract>Move to the given page index with optional animation. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRotateToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>willRotateToInterfaceOrientation:duration:</Anchor>
    <Abstract>Stores the current state of the scroll view in preparation for rotation. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willAnimateRotationToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>willAnimateRotationToInterfaceOrientation:duration:</Anchor>
    <Abstract>Updates the frame of the scroll view while maintaining the current visible page&amp;#39;s state...</Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPagingScrollViewDataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPagingScrollViewDataSource</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDataSource-Protocol.html</Path>
    <Abstract>The data source for NIPagingScrollView. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInPagingScrollView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDataSource-Protocol.html</Path>
    <Anchor>numberOfPagesInPagingScrollView:</Anchor>
    <Abstract>Fetches the total number of pages in the scroll view. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollView:pageViewForIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDataSource-Protocol.html</Path>
    <Anchor>pagingScrollView:pageViewForIndex:</Anchor>
    <Abstract>Fetches a page that will be displayed at the given page index. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPagingScrollViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPagingScrollViewDelegate</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Abstract>The delegate for NIPagingScrollView. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewDidScroll:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewDidScroll:</Anchor>
    <Abstract>The user is scrolling between two photos. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewWillChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewWillChangePages:</Anchor>
    <Abstract>The current page will change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewDidChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewDidChangePages:</Anchor>
    <Abstract>The current page has changed. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPagingScrollViewPage</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIPagingScrollViewPage</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage.html</Path>
    <Abstract>A skeleton implementation of a page view. </Abstract>
    <DeclaredIn>NIPagingScrollViewPage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>This view&amp;#39;s reuse identifier. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithReuseIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>initWithReuseIdentifier:</Anchor>
    <Abstract>Initializes a newly allocated view with the given reuse identifier. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageDidDisappear</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>pageDidDisappear</Anchor>
    <Abstract>Called after the page has gone off-screen. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameAndMaintainState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>setFrameAndMaintainState:</Anchor>
    <Abstract>Called when the frame of the page is going to change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPagingScrollViewPage</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPagingScrollViewPage</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Abstract>The protocol that a paging scroll view page should implement. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>pageIndex</Anchor>
    <Abstract>The index of this page view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageDidDisappear</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>pageDidDisappear</Anchor>
    <Abstract>Called after the page has gone off-screen. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameAndMaintainState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>setFrameAndMaintainState:</Anchor>
    <Abstract>Called when the frame of the page is going to change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>The identifier used to categorize views into buckets for reuse. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoAlbumScrollView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Abstract>A paged scroll view that shows a collection of photos. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>dataSource</Anchor>
    <Abstract>The data source for this photo album view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate for this photo album view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomingIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>zoomingIsEnabled</Anchor>
    <Abstract>Whether zooming is enabled or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomingAboveOriginalSizeIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>zoomingAboveOriginalSizeIsEnabled</Anchor>
    <Abstract>Whether small photos can be zoomed at least until they fit the screen. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoViewBackgroundColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>photoViewBackgroundColor</Anchor>
    <Abstract>The background color of each photo&amp;#39;s view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadingImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>loadingImage</Anchor>
    <Abstract>An image that is displayed while the photo is loading. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didLoadPhoto:atIndex:photoSize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollView.html</Path>
    <Anchor>didLoadPhoto:atIndex:photoSize:</Anchor>
    <Abstract>Notify the scroll view that a photo has been loaded at a given index. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPageIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>centerPageIndex</Anchor>
    <Abstract>The current center page index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPages</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>numberOfPages</Anchor>
    <Abstract>The total number of pages in this paging view, as gathered from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPageView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>centerPageView</Anchor>
    <Abstract>The current center page view. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageMargin</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>pageMargin</Anchor>
    <Abstract>The number of pixels on either side of each page. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>type</Anchor>
    <Abstract>The type of paging scroll view to display. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reloadData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>reloadData</Anchor>
    <Abstract>Force the view to reload its data by asking the data source for information. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dequeueReusablePageWithIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>dequeueReusablePageWithIdentifier:</Anchor>
    <Abstract>Dequeues a reusable page from the set of recycled pages. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNext</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>hasNext</Anchor>
    <Abstract>Returns YES if there is a next page. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPrevious</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>hasPrevious</Anchor>
    <Abstract>Returns YES if there is a previous page. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToNextAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToNextAnimated:</Anchor>
    <Abstract>Move to the next page if there is one. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPreviousAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToPreviousAnimated:</Anchor>
    <Abstract>Move to the previous page if there is one. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPageAtIndex:animated:updateVisiblePagesWhileScrolling:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToPageAtIndex:animated:updateVisiblePagesWhileScrolling:</Anchor>
    <Abstract>Move to the given page index with optional animation and option to enable page updates while scrollin...</Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPageAtIndex:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>moveToPageAtIndex:animated:</Anchor>
    <Abstract>Move to the given page index with optional animation. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRotateToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>willRotateToInterfaceOrientation:duration:</Anchor>
    <Abstract>Stores the current state of the scroll view in preparation for rotation. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willAnimateRotationToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPagingScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollView.html</Path>
    <Anchor>willAnimateRotationToInterfaceOrientation:duration:</Anchor>
    <Abstract>Updates the frame of the scroll view while maintaining the current visible page&amp;#39;s state...</Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrollViewDidDoubleTapToZoom:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoScrollViewDidDoubleTapToZoom:didZoomIn:</Anchor>
    <Abstract>The user has double-tapped the photo to zoom either in or out. </Abstract>
    <DeclaredIn>NIPhotoScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoAlbumScrollViewDataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDataSource-Protocol.html</Path>
    <Abstract>The photo album scroll data source. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:photoAtIndex:photoSize:isLoading:originalPhotoDimensions:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDataSource-Protocol.html</Path>
    <Anchor>photoAlbumScrollView:photoAtIndex:photoSize:isLoading:originalPhotoDimensions:</Anchor>
    <Abstract>Fetches the highest-quality image available for the photo at the given index. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:stopLoadingPhotoAtIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDataSource-Protocol.html</Path>
    <Anchor>photoAlbumScrollView:stopLoadingPhotoAtIndex:</Anchor>
    <Abstract>Called when you should cancel any asynchronous loading requests for the given photo. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInPagingScrollView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDataSource-Protocol.html</Path>
    <Anchor>numberOfPagesInPagingScrollView:</Anchor>
    <Abstract>Fetches the total number of pages in the scroll view. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollView:pageViewForIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDataSource-Protocol.html</Path>
    <Anchor>pagingScrollView:pageViewForIndex:</Anchor>
    <Abstract>Fetches a page that will be displayed at the given page index. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoAlbumScrollViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Abstract>The photo album scroll view delegate. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoAlbumScrollView:didZoomIn:</Anchor>
    <Abstract>The user double-tapped to zoom in or out. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadNextPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoAlbumScrollViewDidLoadNextPhoto:</Anchor>
    <Abstract>The next photo in the album has been loaded and is ready to be displayed. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadPreviousPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoAlbumScrollViewDidLoadPreviousPhoto:</Anchor>
    <Abstract>The previous photo in the album has been loaded and is ready to be displayed. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewDidScroll:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewDidScroll:</Anchor>
    <Abstract>The user is scrolling between two photos. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewWillChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewWillChangePages:</Anchor>
    <Abstract>The current page will change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewDidChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewDidChangePages:</Anchor>
    <Abstract>The current page has changed. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrollView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Abstract>A single photo view that supports zooming and rotation. </Abstract>
    <DeclaredIn>NIPhotoScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageDidDisappear</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>pageDidDisappear</Anchor>
    <Abstract>Called after the page has gone off-screen. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameAndMaintainState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewPage-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewPage-Protocol.html</Path>
    <Anchor>setFrameAndMaintainState:</Anchor>
    <Abstract>Called when the frame of the page is going to change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>The identifier used to categorize views into buckets for reuse. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomingIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>zoomingIsEnabled</Anchor>
    <Abstract>Whether the photo is allowed to be zoomed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomingAboveOriginalSizeIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>zoomingAboveOriginalSizeIsEnabled</Anchor>
    <Abstract>Whether small photos can be zoomed at least until they fit the screen. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleTapToZoomIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>doubleTapToZoomIsEnabled</Anchor>
    <Abstract>Whether double-tapping zooms in and out of the image. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximumScale</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>maximumScale</Anchor>
    <Abstract>The maximum scale of the image. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrollViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>photoScrollViewDelegate</Anchor>
    <Abstract>The photo scroll view delegate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>pageIndex</Anchor>
    <Abstract>The index of this photo within a photo album. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoDimensions</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>photoDimensions</Anchor>
    <Abstract>The largest dimensions of the photo. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleTapGestureRecognizer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>doubleTapGestureRecognizer</Anchor>
    <Abstract>The gesture recognizer for double-tapping zooms in and out of the image. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>image</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>image</Anchor>
    <Abstract>The currently-displayed photo. </Abstract>
    <DeclaredIn>NIPhotoScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>photoSize</Anchor>
    <Abstract>The current size of the photo. </Abstract>
    <DeclaredIn>NIPhotoScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImage:photoSize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollView.html</Path>
    <Anchor>setImage:photoSize:</Anchor>
    <Abstract>Set a new photo with a specific size. </Abstract>
    <DeclaredIn>NIPhotoScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrollViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoScrollViewDelegate</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollViewDelegate-Protocol.html</Path>
    <Abstract>The photo scroll view delegate. </Abstract>
    <DeclaredIn>NIPhotoScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrollViewDidDoubleTapToZoom:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoScrollViewDidDoubleTapToZoom:didZoomIn:</Anchor>
    <Abstract>The user has double-tapped the photo to zoom either in or out. </Abstract>
    <DeclaredIn>NIPhotoScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrubberView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Abstract>A control built for quickly skimming through a collection of images. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Anchor>dataSource</Anchor>
    <Abstract>The data source for this scrubber view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reloadData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Anchor>reloadData</Anchor>
    <Abstract>Forces the scrubber view to reload all of its data. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didLoadThumbnail:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Anchor>didLoadThumbnail:atIndex:</Anchor>
    <Abstract>Notify the scrubber view that a thumbnail has been loaded at a given index. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate for this scrubber view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectedPhotoIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Anchor>selectedPhotoIndex</Anchor>
    <Abstract>The selected photo index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSelectedPhotoIndex:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrubberView</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberView.html</Path>
    <Anchor>setSelectedPhotoIndex:animated:</Anchor>
    <Abstract>Set the selected photo with animation. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrubberViewDataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoScrubberViewDataSource</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberViewDataSource-Protocol.html</Path>
    <Abstract>The data source for the photo scrubber. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPhotosInScrubberView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrubberViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberViewDataSource-Protocol.html</Path>
    <Anchor>numberOfPhotosInScrubberView:</Anchor>
    <Abstract>Fetches the total number of photos in the scroll view. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrubberView:thumbnailAtIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrubberViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberViewDataSource-Protocol.html</Path>
    <Anchor>photoScrubberView:thumbnailAtIndex:</Anchor>
    <Abstract>Fetch the thumbnail image for the given photo index. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrubberViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoScrubberViewDelegate</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberViewDelegate-Protocol.html</Path>
    <Abstract>The delegate for the photo scrubber. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrubberViewDidChangeSelection:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrubberViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberViewDelegate-Protocol.html</Path>
    <Anchor>photoScrubberViewDidChangeSelection:</Anchor>
    <Abstract>The photo scrubber changed its selection. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRadioGroup</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Abstract>A general-purpose radio group. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectedIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>selectedIdentifier</Anchor>
    <Abstract>The currently selected identifier if one is selected, otherwise returns NSIntegerMin. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSelection</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>hasSelection</Anchor>
    <Abstract>Whether or not a selection has been made. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearSelection</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>clearSelection</Anchor>
    <Abstract>Removes the selection from this cell group. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewCellSelectionStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>tableViewCellSelectionStyle</Anchor>
    <Abstract>The cell selection style that will be applied to the cell when it is displayed using delegate forward...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>cellTitle</Anchor>
    <Abstract>The title of the cell that is displayed for a radio group in a UITableView. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controllerTitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>controllerTitle</Anchor>
    <Abstract>The title of the controller that shows the sub radio group selection. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardingTo:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>forwardingTo:</Anchor>
    <Abstract>Sets the delegate that table view methods should be forwarded to. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeForwarding:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>removeForwarding:</Anchor>
    <Abstract>Removes the delegate from the forwarding chain. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>allObjects</Anchor>
    <Abstract>An array of mapped objects in this radio group, ordered in the same order they were mapped...</Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithController:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>initWithController:</Anchor>
    <Abstract>Initializes a newly allocated radio group object with the given controller. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject:toIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>mapObject:toIdentifier:</Anchor>
    <Abstract>Maps the given object to the given identifier. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectInRadioGroup:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>isObjectInRadioGroup:</Anchor>
    <Abstract>Returns YES if the given object is in this radio group. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectSelected:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>isObjectSelected:</Anchor>
    <Abstract>Returns YES if the given object is selected. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identifierForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroup</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroup.html</Path>
    <Anchor>identifierForObject:</Anchor>
    <Abstract>Returns the mapped identifier for this object. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRadioGroupCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIRadioGroupCell</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupCell.html</Path>
    <Abstract>The cell that is displayed for a NIRadioGroup object when it is displayed in a UITableView. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRadioGroupController</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIRadioGroupController</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupController.html</Path>
    <Abstract>A controller that displays the set of options in a radio group. </Abstract>
    <DeclaredIn>NIRadioGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithRadioGroup:tappedCell:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRadioGroupController</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupController.html</Path>
    <Anchor>initWithRadioGroup:tappedCell:</Anchor>
    <Abstract>Initializes a newly allocated radio group controller with the given radio group and cell...</Abstract>
    <DeclaredIn>NIRadioGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRadioGroupDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIRadioGroupDelegate</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupDelegate-Protocol.html</Path>
    <Abstract>The delegate for NIRadioGroup. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radioGroup:didSelectIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRadioGroupDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupDelegate-Protocol.html</Path>
    <Anchor>radioGroup:didSelectIdentifier:</Anchor>
    <Abstract>Called when the user changes the radio group selection. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radioGroup:textForIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRadioGroupDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupDelegate-Protocol.html</Path>
    <Anchor>radioGroup:textForIdentifier:</Anchor>
    <Abstract>Fetches the text that will be displayed in a radio group cell for the current selection. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radioGroup:radioGroupController:willAppear:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRadioGroupDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIRadioGroupDelegate-Protocol.html</Path>
    <Anchor>radioGroup:radioGroupController:willAppear:</Anchor>
    <Abstract>The radio group controller is about to appear. </Abstract>
    <DeclaredIn>NIRadioGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRecyclableView</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Abstract>A simple implementation of the NIRecyclableView protocol as a UIView. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>This view&amp;#39;s reuse identifier. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithReuseIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView.html</Path>
    <Anchor>initWithReuseIdentifier:</Anchor>
    <Abstract>Initializes a newly allocated view with the given reuse identifier. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRecyclableView</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIRecyclableView</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Abstract>The NIRecyclableView protocol defines a set of optional methods that a view may implement to handle b...</Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfp</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>reuseIdentifier</Anchor>
    <Abstract>The identifier used to categorize views into buckets for reuse. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIRecyclableView-p</Scope>
    </TokenIdentifier>
    <Path>NIRecyclableView-Protocol.html</Path>
    <Anchor>prepareForReuse</Anchor>
    <Abstract>Called immediately after the view has been dequeued from the recycled view pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISegmentedControlFormElement</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISegmentedControlFormElement</Scope>
    </TokenIdentifier>
    <Path>NISegmentedControlFormElement.html</Path>
    <Abstract>A segmented control form element. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segmentedControlElementWithID:labelText:segments:selectedIndex:didChangeTarget:didChangeSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NISegmentedControlFormElement</Scope>
    </TokenIdentifier>
    <Path>NISegmentedControlFormElement.html</Path>
    <Anchor>segmentedControlElementWithID:labelText:segments:selectedIndex:didChangeTarget:didChangeSelector:</Anchor>
    <Abstract>Initializes a segmented control form cell with callback method for value change events. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segmentedControlElementWithID:labelText:segments:selectedIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NISegmentedControlFormElement</Scope>
    </TokenIdentifier>
    <Path>NISegmentedControlFormElement.html</Path>
    <Anchor>segmentedControlElementWithID:labelText:segments:selectedIndex:</Anchor>
    <Abstract>Initializes a segmented control form cell. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISegmentedControlFormElementCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISegmentedControlFormElementCell</Scope>
    </TokenIdentifier>
    <Path>NISegmentedControlFormElementCell.html</Path>
    <Abstract>The cell sibling to NISegmentedControlFormElement. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISliderFormElement</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISliderFormElement</Scope>
    </TokenIdentifier>
    <Path>NISliderFormElement.html</Path>
    <Abstract>A slider form element. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISliderFormElementCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISliderFormElementCell</Scope>
    </TokenIdentifier>
    <Path>NISliderFormElementCell.html</Path>
    <Abstract>The cell sibling to NISliderFormElement. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISnapshotRotation</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Abstract>The NISnapshotRotation class provides support for implementing snapshot-based rotations on views...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate of the snapshot rotation object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>initWithDelegate:</Anchor>
    <Abstract>Initializes a newly allocated rotation object with a given delegate. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRotateToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>willRotateToInterfaceOrientation:duration:</Anchor>
    <Abstract>Prepares the animation for a rotation by taking a snapshot of the rotatingView in its current state...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willAnimateRotationToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>willAnimateRotationToInterfaceOrientation:duration:</Anchor>
    <Abstract>Crossfades between the initial and final snapshots. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didRotateFromInterfaceOrientation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>didRotateFromInterfaceOrientation:</Anchor>
    <Abstract>Finalizes the rotation animation by removing the snapshot views from the container view...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISnapshotRotationDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NISnapshotRotationDelegate</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotationDelegate-Protocol.html</Path>
    <Abstract>The methods declared by the NISnapshotRotation protocol allow the adopting delegate to respond to mes...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containerViewForSnapshotRotation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NISnapshotRotationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotationDelegate-Protocol.html</Path>
    <Anchor>containerViewForSnapshotRotation:</Anchor>
    <Abstract>Tells the delegate to return the container view of the rotating view. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotatingViewForSnapshotRotation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NISnapshotRotationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotationDelegate-Protocol.html</Path>
    <Anchor>rotatingViewForSnapshotRotation:</Anchor>
    <Abstract>Tells the delegate to return the rotating view. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fixedInsetsForSnapshotRotation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NISnapshotRotationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotationDelegate-Protocol.html</Path>
    <Anchor>fixedInsetsForSnapshotRotation:</Anchor>
    <Abstract>Asks the delegate to return the insets of the rotating view that should be fixed during rotation...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStyleable</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NIStyleable</Scope>
    </TokenIdentifier>
    <Path>NIStyleable-Protocol.html</Path>
    <Abstract>The protocol used by the NIStylesheet to apply NICSSRuleSets to views. </Abstract>
    <DeclaredIn>NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyStyleWithRuleSet:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIStyleable-p</Scope>
    </TokenIdentifier>
    <Path>NIStyleable-Protocol.html</Path>
    <Anchor>applyStyleWithRuleSet:</Anchor>
    <Abstract>Please implement applyStyleWithRuleSet:inDOM: instead to support relative positioning. </Abstract>
    <DeclaredIn>NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyStyleWithRuleSet:inDOM:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIStyleable-p</Scope>
    </TokenIdentifier>
    <Path>NIStyleable-Protocol.html</Path>
    <Anchor>applyStyleWithRuleSet:inDOM:</Anchor>
    <Abstract>The given ruleset should be applied to the view. </Abstract>
    <DeclaredIn>NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pseudoClasses</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIStyleable-p</Scope>
    </TokenIdentifier>
    <Path>NIStyleable-Protocol.html</Path>
    <Anchor>pseudoClasses</Anchor>
    <Abstract>Tells the CSS engine a set of pseudo classes that apply to views of this class. </Abstract>
    <DeclaredIn>NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyStyleWithRuleSet:forPseudoClass:inDOM:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIStyleable-p</Scope>
    </TokenIdentifier>
    <Path>NIStyleable-Protocol.html</Path>
    <Anchor>applyStyleWithRuleSet:forPseudoClass:inDOM:</Anchor>
    <Abstract>Applies the given rule set to this view but for a pseudo class. </Abstract>
    <DeclaredIn>NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descriptionWithRuleSet:forPseudoClass:inDOM:withViewName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIStyleable-p</Scope>
    </TokenIdentifier>
    <Path>NIStyleable-Protocol.html</Path>
    <Anchor>descriptionWithRuleSet:forPseudoClass:inDOM:withViewName:</Anchor>
    <Abstract>Return a string describing what would be done with the view. </Abstract>
    <DeclaredIn>NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStylesheet</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Abstract>Loads and caches information regarding a specific stylesheet. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rulesetClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>rulesetClass</Anchor>
    <Abstract>The class to create for rule sets. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRulesetClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>setRulesetClass:</Anchor>
    <Abstract>Set the class created to hold rule sets. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dependencies</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>dependencies</Anchor>
    <Abstract>A set of NSString filenames for the @imports in this stylesheet. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromPath:pathPrefix:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>loadFromPath:pathPrefix:delegate:</Anchor>
    <Abstract>Loads and parses a CSS file from disk. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromPath:pathPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>loadFromPath:pathPrefix:</Anchor>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>loadFromPath:</Anchor>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStylesheet:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>addStylesheet:</Anchor>
    <Abstract>Merge another stylesheet with this one. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descriptionForView:withClassName:inDOM:andViewName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>descriptionForView:withClassName:inDOM:andViewName:</Anchor>
    <Abstract>Build a string describing the rules that would be applied to the view given a css class name in a DOM...</Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rulesetForClassName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheet</Scope>
    </TokenIdentifier>
    <Path>NIStylesheet.html</Path>
    <Anchor>rulesetForClassName:</Anchor>
    <Abstract>Returns an autoreleased ruleset for the given class name. </Abstract>
    <DeclaredIn>NIStylesheet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStylesheetCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIStylesheetCache</Scope>
    </TokenIdentifier>
    <Path>NIStylesheetCache.html</Path>
    <Abstract>A simple in-memory cache for stylesheets. </Abstract>
    <DeclaredIn>NIStylesheetCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathPrefix</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIStylesheetCache</Scope>
    </TokenIdentifier>
    <Path>NIStylesheetCache.html</Path>
    <Anchor>pathPrefix</Anchor>
    <Abstract>The path prefix that will be used to load stylesheets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithPathPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheetCache</Scope>
    </TokenIdentifier>
    <Path>NIStylesheetCache.html</Path>
    <Anchor>initWithPathPrefix:</Anchor>
    <Abstract>Initializes a newly allocated stylesheet cache with a given path prefix. </Abstract>
    <DeclaredIn>NIStylesheetCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stylesheetWithPath:loadFromDisk:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheetCache</Scope>
    </TokenIdentifier>
    <Path>NIStylesheetCache.html</Path>
    <Anchor>stylesheetWithPath:loadFromDisk:</Anchor>
    <Abstract>Fetches a stylesheet from the in-memory cache if it exists or loads the stylesheet from disk if loadF...</Abstract>
    <DeclaredIn>NIStylesheetCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stylesheetWithPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIStylesheetCache</Scope>
    </TokenIdentifier>
    <Path>NIStylesheetCache.html</Path>
    <Anchor>stylesheetWithPath:</Anchor>
    <Abstract>Fetches a stylesheet from the in-memory cache if it exists or loads the stylesheet from disk...</Abstract>
    <DeclaredIn>NIStylesheetCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISubtitleCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISubtitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NISubtitleCellObject.html</Path>
    <Abstract>An object for displaying two lines of text in a table view cell. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subtitle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NISubtitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NISubtitleCellObject.html</Path>
    <Anchor>subtitle</Anchor>
    <Abstract>The text to be displayed in the subtitle portion of the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NISubtitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NISubtitleCellObject.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The type of UITableViewCell to instantiate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:subtitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISubtitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NISubtitleCellObject.html</Path>
    <Anchor>initWithTitle:subtitle:</Anchor>
    <Abstract>Initializes the NICellObject with NITextCell as the cell class and the given title and subtitle text...</Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:subtitle:image:cellClass:userInfo:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISubtitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NISubtitleCellObject.html</Path>
    <Anchor>initWithTitle:subtitle:image:cellClass:userInfo:</Anchor>
    <Abstract>Initializes the NISubtitleCellObject with the given title, subtitle, image, cellClass, and userInfo. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithTitle:subtitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NISubtitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NISubtitleCellObject.html</Path>
    <Anchor>objectWithTitle:subtitle:</Anchor>
    <Abstract>Convenience method for initWithTitle:subtitle:. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>title</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>title</Anchor>
    <Abstract>The text to be displayed in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:image:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>initWithTitle:image:</Anchor>
    <Abstract>Initializes the NITitleCellObject with NITextCell as the cell class and the given title text and imag...</Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>initWithTitle:</Anchor>
    <Abstract>Initializes the NITitleCellObject with NITextCell as the cell class and the given title text...</Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:image:cellClass:userInfo:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>initWithTitle:image:cellClass:userInfo:</Anchor>
    <Abstract>Initializes the NITitleCellObject with the given title, image, cellClass, and userInfo. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithTitle:image:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>objectWithTitle:image:</Anchor>
    <Abstract>Convenience method for initWithTitle:image:. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithTitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>objectWithTitle:</Anchor>
    <Abstract>Convenience method for initWithTitle:. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICellObject</Scope>
    </TokenIdentifier>
    <Path>NICellObject.html</Path>
    <Anchor>userInfo</Anchor>
    <Abstract>An object that can be used to populate information in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISwitchFormElement</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISwitchFormElement</Scope>
    </TokenIdentifier>
    <Path>NISwitchFormElement.html</Path>
    <Abstract>A switch form element. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISwitchFormElementCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NISwitchFormElementCell</Scope>
    </TokenIdentifier>
    <Path>NISwitchFormElementCell.html</Path>
    <Abstract>The cell sibling to NISwitchFormElement. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITableViewActions</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITableViewActions</Scope>
    </TokenIdentifier>
    <Path>NITableViewActions.html</Path>
    <Abstract>The NITableViewActions class provides an interface for attaching actions to objects in a NITableViewM...</Abstract>
    <DeclaredIn>NITableViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewCellSelectionStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewActions</Scope>
    </TokenIdentifier>
    <Path>NITableViewActions.html</Path>
    <Anchor>tableViewCellSelectionStyle</Anchor>
    <Abstract>The cell selection style that will be applied to the cell when it is displayed using delegate forward...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardingTo:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewActions</Scope>
    </TokenIdentifier>
    <Path>NITableViewActions.html</Path>
    <Anchor>forwardingTo:</Anchor>
    <Abstract>Sets the delegate that table view methods should be forwarded to. </Abstract>
    <DeclaredIn>NITableViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeForwarding:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewActions</Scope>
    </TokenIdentifier>
    <Path>NITableViewActions.html</Path>
    <Anchor>removeForwarding:</Anchor>
    <Abstract>Removes the delegate from the forwarding chain. </Abstract>
    <DeclaredIn>NITableViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accessoryTypeForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewActions</Scope>
    </TokenIdentifier>
    <Path>NITableViewActions.html</Path>
    <Anchor>accessoryTypeForObject:</Anchor>
    <Abstract>Returns the accessory type this actions object will apply to a cell for the given object when it is d...</Abstract>
    <DeclaredIn>NITableViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectionStyleForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewActions</Scope>
    </TokenIdentifier>
    <Path>NITableViewActions.html</Path>
    <Anchor>selectionStyleForObject:</Anchor>
    <Abstract>Returns the cell selection style this actions object will apply to a cell for the given object when i...</Abstract>
    <DeclaredIn>NITableViewActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTarget:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>ginitWithTarget:</Anchor>
    <Abstract>Initializes a newly allocated table view actions object with the given target. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapBlock:</Anchor>
    <Abstract>Attaches a tap action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailBlock:</Anchor>
    <Abstract>Attaches a detail action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation action to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToObject:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToObject:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to the given object. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapBlock:</Anchor>
    <Abstract>Attaches a tap block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailBlock:</Anchor>
    <Abstract>Attaches a detail block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationBlock:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationBlock:</Anchor>
    <Abstract>Attaches a navigation block to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:tapSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:tapSelector:</Anchor>
    <Abstract>Attaches a tap selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:detailSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:detailSelector:</Anchor>
    <Abstract>Attaches a detail selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachToClass:navigationSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gattachToClass:navigationSelector:</Anchor>
    <Abstract>Attaches a navigation selector to a class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isObjectActionable:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gisObjectActionable:</Anchor>
    <Abstract>Returns whether or not the object has any actions attached to it. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromKeyClass:map:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIActions</Scope>
    </TokenIdentifier>
    <Path>Actions.html</Path>
    <Anchor>gobjectFromKeyClass:map:</Anchor>
    <Abstract>Returns a mapped object from the given key class. </Abstract>
    <DeclaredIn>NIActions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITableViewModel</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Abstract>A non-mutable table view model that complies to the UITableViewDataSource protocol. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionIndexType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>sectionIndexType</Anchor>
    <Abstract>The section index type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionIndexShowsSearch</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>sectionIndexShowsSearch</Anchor>
    <Abstract>Whether or not the search symbol will be shown in the section index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionIndexShowsSummary</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>sectionIndexShowsSummary</Anchor>
    <Abstract>Whether or not the summary symbol will be shown in the section index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSectionIndexType:showsSearch:showsSummary:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>setSectionIndexType:showsSearch:showsSummary:</Anchor>
    <Abstract>Configures the model&amp;#39;s section index properties. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>A delegate used to fetch table view cells for the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCellBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>createCellBlock</Anchor>
    <Abstract>A block used to create a UITableViewCell for a given object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>initWithDelegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the given delegate and empty contents. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithListArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>initWithListArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a list array. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithSectionedArray:delegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>initWithSectionedArray:delegate:</Anchor>
    <Abstract>Initializes a newly allocated static model with the contents of a sectioned array. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtIndexPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>objectAtIndexPath:</Anchor>
    <Abstract>Returns the object at the given index path. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexPathForObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITableViewModel</Scope>
    </TokenIdentifier>
    <Path>NITableViewModel.html</Path>
    <Anchor>indexPathForObject:</Anchor>
    <Abstract>Returns the index path of the given object within the model. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITableViewModelDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>intf</Type>
      <Scope>NITableViewModelDelegate</Scope>
    </TokenIdentifier>
    <Path>NITableViewModelDelegate-Protocol.html</Path>
    <Abstract>A protocol for NITableViewModel to fetch rows to be displayed for the table view. ...</Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableViewModel:cellForTableView:atIndexPath:withObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NITableViewModelDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NITableViewModelDelegate-Protocol.html</Path>
    <Anchor>tableViewModel:cellForTableView:atIndexPath:withObject:</Anchor>
    <Abstract>Fetches a table view cell at a given index path with a given object. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITableViewModelFooter</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITableViewModelFooter</Scope>
    </TokenIdentifier>
    <Path>NITableViewModelFooter.html</Path>
    <Abstract>An object used in sectioned arrays to denote a section footer title. </Abstract>
    <DeclaredIn>NITableViewModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITableViewSnapshotRotation</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITableViewSnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NITableViewSnapshotRotation.html</Path>
    <Abstract>The NITableViewSnapshotRotation class implements the fixedInsetsForSnapshotRotation: delegate method ...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>delegate</Anchor>
    <Abstract>The delegate of the snapshot rotation object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>initWithDelegate:</Anchor>
    <Abstract>Initializes a newly allocated rotation object with a given delegate. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRotateToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>willRotateToInterfaceOrientation:duration:</Anchor>
    <Abstract>Prepares the animation for a rotation by taking a snapshot of the rotatingView in its current state...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willAnimateRotationToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>willAnimateRotationToInterfaceOrientation:duration:</Anchor>
    <Abstract>Crossfades between the initial and final snapshots. </Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didRotateFromInterfaceOrientation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NISnapshotRotation</Scope>
    </TokenIdentifier>
    <Path>NISnapshotRotation.html</Path>
    <Anchor>didRotateFromInterfaceOrientation:</Anchor>
    <Abstract>Finalizes the rotation animation by removing the snapshot views from the container view...</Abstract>
    <DeclaredIn>NISnapshotRotation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITextCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITextCell</Scope>
    </TokenIdentifier>
    <Path>NITextCell.html</Path>
    <Abstract>A general-purpose cell for displaying text. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITextField</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Abstract>UITextField leaves a little to be desired on the visual customization front. </Abstract>
    <DeclaredIn>NITextField.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>placeholderTextColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Anchor>placeholderTextColor</Anchor>
    <Abstract>If non-nil, this color will be used to draw the placeholder text. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>placeholderFont</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Anchor>placeholderFont</Anchor>
    <Abstract>If non-nil, this font will be used to draw the placeholder text. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textInsets</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Anchor>textInsets</Anchor>
    <Abstract>The amount to inset the text by, or zero to use default behavior. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyNITextFieldStyleWithRuleSet:inDOM:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Anchor>applyNITextFieldStyleWithRuleSet:inDOM:</Anchor>
    <Abstract>Applies the given rule set to this text field. </Abstract>
    <DeclaredIn>NITextField+NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyNITextFieldStyleBeforeViewWithRuleSet:inDOM:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Anchor>applyNITextFieldStyleBeforeViewWithRuleSet:inDOM:</Anchor>
    <Abstract>Applies the given rule set to this label. </Abstract>
    <DeclaredIn>NITextField+NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyStyleWithRuleSet:forPseudoClass:inDOM:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITextField</Scope>
    </TokenIdentifier>
    <Path>NITextField.html</Path>
    <Anchor>applyStyleWithRuleSet:forPseudoClass:inDOM:</Anchor>
    <Abstract>Applies the given rule set to this text field but for a pseudo class. </Abstract>
    <DeclaredIn>NITextField+NIStyleable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITextInputFormElement</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITextInputFormElement</Scope>
    </TokenIdentifier>
    <Path>NITextInputFormElement.html</Path>
    <Abstract>A text input form element. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITextInputFormElementCell</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITextInputFormElementCell</Scope>
    </TokenIdentifier>
    <Path>NITextInputFormElementCell.html</Path>
    <Abstract>The cell sibling to NITextInputFormElement. </Abstract>
    <DeclaredIn>NIFormCellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUpdateCellWithObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldUpdateCellWithObject:</Anchor>
    <Abstract>Called when a cell is created and reused. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAppendObjectClassToReuseIdentifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>shouldAppendObjectClassToReuseIdentifier</Anchor>
    <Abstract>Asks the receiver whether the mapped object class should be appended to the reuse identifier in order...</Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heightForObject:atIndexPath:tableView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfcm</Type>
      <Scope>NICell-p</Scope>
    </TokenIdentifier>
    <Path>NICell-Protocol.html</Path>
    <Anchor>heightForObject:atIndexPath:tableView:</Anchor>
    <Abstract>Asks the receiver to calculate its height. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NITitleCellObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Abstract>An object for displaying a single-line title in a table view cell. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>title</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>title</Anchor>
    <Abstract>The text to be displayed in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:image:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>initWithTitle:image:</Anchor>
    <Abstract>Initializes the NITitleCellObject with NITextCell as the cell class and the given title text and imag...</Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>initWithTitle:</Anchor>
    <Abstract>Initializes the NITitleCellObject with NITextCell as the cell class and the given title text...</Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:image:cellClass:userInfo:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>initWithTitle:image:cellClass:userInfo:</Anchor>
    <Abstract>Initializes the NITitleCellObject with the given title, image, cellClass, and userInfo. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithTitle:image:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>objectWithTitle:image:</Anchor>
    <Abstract>Convenience method for initWithTitle:image:. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithTitle:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NITitleCellObject</Scope>
    </TokenIdentifier>
    <Path>NITitleCellObject.html</Path>
    <Anchor>objectWithTitle:</Anchor>
    <Abstract>Convenience method for initWithTitle:. </Abstract>
    <DeclaredIn>NICellCatalog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userInfo</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NICellObject</Scope>
    </TokenIdentifier>
    <Path>NICellObject.html</Path>
    <Anchor>userInfo</Anchor>
    <Abstract>An object that can be used to populate information in the cell. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellClass</Anchor>
    <Abstract>The class of cell to be created when this object is passed to the cell factory. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellStyle</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NICellObject-p</Scope>
    </TokenIdentifier>
    <Path>NICellObject-Protocol.html</Path>
    <Anchor>cellStyle</Anchor>
    <Abstract>The style of UITableViewCell to be used when initializing the cell for the first time. </Abstract>
    <DeclaredIn>NICellFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIToolbarPhotoViewController</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Abstract>A simple photo album view controller implementation with a toolbar. </Abstract>
    <DeclaredIn>NIToolbarPhotoViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toolbarIsTranslucent</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>toolbarIsTranslucent</Anchor>
    <Abstract>Whether the toolbar is translucent and shows photos beneath it or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hidesChromeWhenScrolling</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>hidesChromeWhenScrolling</Anchor>
    <Abstract>Whether or not to hide the chrome when the user begins interacting with the photo. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chromeCanBeHidden</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>chromeCanBeHidden</Anchor>
    <Abstract>Whether or not to allow hiding the chrome. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animateMovingToNextAndPreviousPhotos</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>animateMovingToNextAndPreviousPhotos</Anchor>
    <Abstract>Whether to animate moving to a next or previous photo when the user taps the button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scrubberIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>scrubberIsEnabled</Anchor>
    <Abstract>Whether to show a scrubber in the toolbar instead of next/previous buttons. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toolbar</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>toolbar</Anchor>
    <Abstract>The toolbar view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>photoAlbumView</Anchor>
    <Abstract>The photo album view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrubberView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>photoScrubberView</Anchor>
    <Abstract>The photo scrubber view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>nextButton</Anchor>
    <Abstract>The &amp;#39;next&amp;#39; button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>NIToolbarPhotoViewController.html</Path>
    <Anchor>previousButton</Anchor>
    <Abstract>The &amp;#39;previous&amp;#39; button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoAlbumScrollView:didZoomIn:</Anchor>
    <Abstract>The user double-tapped to zoom in or out. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadNextPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoAlbumScrollViewDidLoadNextPhoto:</Anchor>
    <Abstract>The next photo in the album has been loaded and is ready to be displayed. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadPreviousPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoAlbumScrollViewDelegate-Protocol.html</Path>
    <Anchor>photoAlbumScrollViewDidLoadPreviousPhoto:</Anchor>
    <Abstract>The previous photo in the album has been loaded and is ready to be displayed. </Abstract>
    <DeclaredIn>NIPhotoAlbumScrollViewDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewDidScroll:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewDidScroll:</Anchor>
    <Abstract>The user is scrolling between two photos. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewWillChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewWillChangePages:</Anchor>
    <Abstract>The current page will change. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pagingScrollViewDidChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPagingScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPagingScrollViewDelegate-Protocol.html</Path>
    <Anchor>pagingScrollViewDidChangePages:</Anchor>
    <Abstract>The current page has changed. </Abstract>
    <DeclaredIn>NIPagingScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrubberViewDidChangeSelection:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrubberViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>NIPhotoScrubberViewDelegate-Protocol.html</Path>
    <Anchor>photoScrubberViewDidChangeSelection:</Anchor>
    <Abstract>The photo scrubber changed its selection. </Abstract>
    <DeclaredIn>NIPhotoScrubberView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIUserInterfaceString</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Abstract>A very thin derivative of NSString that will track what user interface elements it has been assigned ...</Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stringResolver</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>stringResolver</Anchor>
    <Abstract>The global resolver for strings by key. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStringResolver:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>setStringResolver:</Anchor>
    <Abstract>Set the global resolver for strings by key. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithKey:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>initWithKey:</Anchor>
    <Abstract>Create a string with the given key using the resolver. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithKey:defaultValue:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>initWithKey:defaultValue:</Anchor>
    <Abstract>Create a string with the given key using the resolver and a default value if not found. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attach:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>attach:</Anchor>
    <Abstract>Attach a string to a user interface element. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attach:withSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>attach:withSelector:</Anchor>
    <Abstract>Attach a string to an element via a selector. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attach:withSelector:forControlState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>attach:withSelector:forControlState:</Anchor>
    <Abstract>Attach a string to a user interface element that supports control states. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detach:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>detach:</Anchor>
    <Abstract>Detach a string from a user interface element. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detach:withSelector:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>detach:withSelector:</Anchor>
    <Abstract>Attach a string to an element via a selector. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>detach:withSelector:forControlState:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIUserInterfaceString</Scope>
    </TokenIdentifier>
    <Path>NIUserInterfaceString.html</Path>
    <Anchor>detach:withSelector:forControlState:</Anchor>
    <Abstract>Attach a string to an element via a selector. </Abstract>
    <DeclaredIn>NIUserInterfaceString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIViewRecycler</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIViewRecycler</Scope>
    </TokenIdentifier>
    <Path>NIViewRecycler.html</Path>
    <Abstract>An object for efficiently reusing views by recycling and dequeuing them from a pool of views...</Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dequeueReusableViewWithIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIViewRecycler</Scope>
    </TokenIdentifier>
    <Path>NIViewRecycler.html</Path>
    <Anchor>dequeueReusableViewWithIdentifier:</Anchor>
    <Abstract>Dequeues a reusable view from the recycled views pool if one exists, otherwise returns nil...</Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recycleView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIViewRecycler</Scope>
    </TokenIdentifier>
    <Path>NIViewRecycler.html</Path>
    <Anchor>recycleView:</Anchor>
    <Abstract>Adds a given view to the recycled views pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllViews</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIViewRecycler</Scope>
    </TokenIdentifier>
    <Path>NIViewRecycler.html</Path>
    <Anchor>removeAllViews</Anchor>
    <Abstract>Removes all of the views from the recycled views pool. </Abstract>
    <DeclaredIn>NIViewRecycler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIWebController</Name>
      <APILanguage>occ</APILanguage>
      <Type>cl</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Abstract>A simple web view controller implementation with a toolbar. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toolbar</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>toolbar</Anchor>
    <Abstract>The toolbar. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toolbarHidden</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>toolbarHidden</Anchor>
    <Abstract>The visibility of the toolbar. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toolbarTintColor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>toolbarTintColor</Anchor>
    <Abstract>The tint color of the toolbar. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>webView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>webView</Anchor>
    <Abstract>The internal web view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithRequest:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>initWithRequest:</Anchor>
    <Abstract>Initializes a newly allocated web controller with a given request. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>initWithURL:</Anchor>
    <Abstract>Initializes a newly allocated web controller with a given URL to request. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>openURL:</Anchor>
    <Abstract>Loads a request with the given URL in the web view. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openRequest:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>openRequest:</Anchor>
    <Abstract>Load the given request using UIWebView&amp;#39;s loadRequest:. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openHTMLString:baseURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>openHTMLString:baseURL:</Anchor>
    <Abstract>Load the given request using UIWebView&amp;#39;s loadHTMLString:baseURL:. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldPresentActionSheet:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIWebController</Scope>
    </TokenIdentifier>
    <Path>NIWebController.html</Path>
    <Anchor>shouldPresentActionSheet:</Anchor>
    <Abstract>This message is called in response to the user clicking the action toolbar button. </Abstract>
    <DeclaredIn>NIWebController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSMutableAttributedString(NimbusAttributedLabel)</Name>
      <APILanguage>occ</APILanguage>
      <Type>cat</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Abstract>For easier formatting of NSAttributedString. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextAlignment:lineBreakMode:lineHeight:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setTextAlignment:lineBreakMode:lineHeight:range:</Anchor>
    <Abstract>Sets the text alignment and line break mode for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextAlignment:lineBreakMode:lineHeight:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setTextAlignment:lineBreakMode:lineHeight:</Anchor>
    <Abstract>Sets the text alignment and the line break mode for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextColor:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setTextColor:range:</Anchor>
    <Abstract>Sets the text color for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextColor:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setTextColor:</Anchor>
    <Abstract>Sets the text color for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFont:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setFont:range:</Anchor>
    <Abstract>Sets the font for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFont:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setFont:</Anchor>
    <Abstract>Sets the font for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnderlineStyle:modifier:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setUnderlineStyle:modifier:range:</Anchor>
    <Abstract>Sets the underline style and modifier for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnderlineStyle:modifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setUnderlineStyle:modifier:</Anchor>
    <Abstract>Sets the underline style and modifier for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStrokeWidth:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setStrokeWidth:range:</Anchor>
    <Abstract>Sets the stroke width for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStrokeWidth:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setStrokeWidth:</Anchor>
    <Abstract>Sets the stroke width for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStrokeColor:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setStrokeColor:range:</Anchor>
    <Abstract>Sets the stroke color for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStrokeColor:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setStrokeColor:</Anchor>
    <Abstract>Sets the stroke color for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKern:range:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setKern:range:</Anchor>
    <Abstract>Sets the text kern for a given range. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKern:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableAttributedString(NimbusAttributedLabel)</Scope>
    </TokenIdentifier>
    <Path>categoryNSMutableAttributedString_07NimbusAttributedLabel_08.html</Path>
    <Anchor>setKern:</Anchor>
    <Abstract>Sets the text kern for the entire string. </Abstract>
    <DeclaredIn>NSMutableAttributedString+NimbusAttributedLabel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UIResponder(NimbusCore)</Name>
      <APILanguage>occ</APILanguage>
      <Type>cat</Type>
      <Scope>UIResponder(NimbusCore)</Scope>
    </TokenIdentifier>
    <Path>categoryUIResponder_07NimbusCore_08.html</Path>
    <Abstract>For working with UIResponders. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nimbus_currentFirstResponder</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>UIResponder(NimbusCore)</Scope>
    </TokenIdentifier>
    <Path>categoryUIResponder_07NimbusCore_08.html</Path>
    <Anchor>nimbus_currentFirstResponder</Anchor>
    <Abstract>Returns the current first responder by sending an action from the UIApplication. </Abstract>
    <DeclaredIn>UIResponder+NimbusCore.h</DeclaredIn>
  </Token>
</Tokens>
